{
  "version": 3,
  "sources": ["../../node_modules/@google/generative-ai/dist/index.js", "../../node_modules/sentiment/lib/tokenize.js", "../../node_modules/sentiment/build/emoji.json", "../../node_modules/sentiment/languages/en/labels.json", "../../node_modules/sentiment/languages/en/negators.json", "../../node_modules/sentiment/languages/en/scoring-strategy.js", "../../node_modules/sentiment/languages/en/index.js", "../../node_modules/sentiment/lib/language-processor.js", "../../node_modules/sentiment/lib/index.js", "../chatai.js"],
  "sourcesContent": ["'use strict';\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nexports.HarmCategory = void 0;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(exports.HarmCategory || (exports.HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nexports.HarmBlockThreshold = void 0;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(exports.HarmBlockThreshold || (exports.HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nexports.HarmProbability = void 0;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(exports.HarmProbability || (exports.HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nexports.BlockReason = void 0;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(exports.BlockReason || (exports.BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nexports.FinishReason = void 0;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(exports.FinishReason || (exports.FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nexports.TaskType = void 0;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(exports.TaskType || (exports.TaskType = {}));\n/**\n * @public\n */\nexports.FunctionCallingMode = void 0;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(exports.FunctionCallingMode || (exports.FunctionCallingMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nexports.FunctionDeclarationSchemaType = void 0;\n(function (FunctionDeclarationSchemaType) {\n    /** String type. */\n    FunctionDeclarationSchemaType[\"STRING\"] = \"STRING\";\n    /** Number type. */\n    FunctionDeclarationSchemaType[\"NUMBER\"] = \"NUMBER\";\n    /** Integer type. */\n    FunctionDeclarationSchemaType[\"INTEGER\"] = \"INTEGER\";\n    /** Boolean type. */\n    FunctionDeclarationSchemaType[\"BOOLEAN\"] = \"BOOLEAN\";\n    /** Array type. */\n    FunctionDeclarationSchemaType[\"ARRAY\"] = \"ARRAY\";\n    /** Object type. */\n    FunctionDeclarationSchemaType[\"OBJECT\"] = \"OBJECT\";\n})(exports.FunctionDeclarationSchemaType || (exports.FunctionDeclarationSchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.12.0\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = url.requestOptions.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\n/**\n * Wrapper for _makeRequestInternal that automatically uses native fetch,\n * allowing _makeRequestInternal to be tested with a mocked fetch function.\n */\nasync function makeRequest(model, task, apiKey, stream, body, requestOptions) {\n    return _makeRequestInternal(model, task, apiKey, stream, body, requestOptions, fetch);\n}\nasync function _makeRequestInternal(model, task, apiKey, stream, body, requestOptions, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    let response;\n    try {\n        const request = await constructRequest(model, task, apiKey, stream, body, requestOptions);\n        response = await fetchFn(request.url, request.fetchOptions);\n        if (!response.ok) {\n            let message = \"\";\n            let errorDetails;\n            try {\n                const json = await response.json();\n                message = json.error.message;\n                if (json.error.details) {\n                    message += ` ${JSON.stringify(json.error.details)}`;\n                    errorDetails = json.error.details;\n                }\n            }\n            catch (e) {\n                // ignored\n            }\n            throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n        }\n    }\n    catch (e) {\n        let err = e;\n        if (!(e instanceof GoogleGenerativeAIFetchError ||\n            e instanceof GoogleGenerativeAIRequestInputError)) {\n            err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n            err.stack = e.stack;\n        }\n        throw err;\n    }\n    return response;\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n        setTimeout(() => abortController.abort(), requestOptions.timeout);\n        fetchOptions.signal = signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [exports.FinishReason.RECITATION, exports.FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[i].content.parts.push(newPart);\n                    }\n                }\n            }\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, requestOptions) {\n        this.model = model;\n        this.params = params;\n        this.requestOptions = requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}\n     */\n    async sendMessage(request) {\n        var _a, _b, _c, _d, _e;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            contents: [...this._history, newContent],\n        };\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, this.requestOptions))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     */\n    async sendMessageStream(request) {\n        var _a, _b, _c, _d, _e;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            contents: [...this._history, newContent],\n        };\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, this.requestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, requestOptions) {\n    const response = await makeRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(Object.assign(Object.assign({}, params), { model })), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, requestOptions) {\n        this.apiKey = apiKey;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.requestOptions = requestOptions || {};\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     */\n    async generateContent(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model\n     * and returns an object containing an iterable stream that iterates\n     * over all chunks in the streaming response as well as\n     * a promise that returns the final aggregated response.\n     */\n    async generateContentStream(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction }, startChatParams), this.requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     */\n    async countTokens(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return countTokens(this.apiKey, this.model, formattedParams, this.requestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     */\n    async embedContent(request) {\n        const formattedParams = formatEmbedContentInput(request);\n        return embedContent(this.apiKey, this.model, formattedParams, this.requestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     */\n    async batchEmbedContents(batchEmbedContentRequest) {\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, this.requestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n}\n\nexports.ChatSession = ChatSession;\nexports.GenerativeModel = GenerativeModel;\nexports.GoogleGenerativeAI = GoogleGenerativeAI;\nexports.GoogleGenerativeAIError = GoogleGenerativeAIError;\nexports.GoogleGenerativeAIFetchError = GoogleGenerativeAIFetchError;\nexports.GoogleGenerativeAIRequestInputError = GoogleGenerativeAIRequestInputError;\nexports.GoogleGenerativeAIResponseError = GoogleGenerativeAIResponseError;\nexports.POSSIBLE_ROLES = POSSIBLE_ROLES;\n//# sourceMappingURL=index.js.map\n", "/*eslint no-useless-escape: \"off\"*/\n\n/**\n * Remove special characters and return an array of tokens (words).\n * @param  {string} input Input string\n * @return {array}        Array of tokens\n */\nmodule.exports = function(input) {\n    return input\n        .toLowerCase()\n        .replace(/\\n/g, ' ')\n        .replace(/[.,\\/#!?$%\\^&\\*;:{}=_`\\\"~()]/g, ' ')\n        .replace(/\\s\\s+/g, ' ')\n        .trim()\n        .split(' ');\n};\n", "{\n    \"\uD83D\uDE02\": 1,\n    \"\u2764\": 3,\n    \"\u2665\": 3,\n    \"\uD83D\uDE0D\": 3,\n    \"\uD83D\uDE2D\": -1,\n    \"\uD83D\uDE18\": 3,\n    \"\uD83D\uDE0A\": 3,\n    \"\uD83D\uDC4C\": 2,\n    \"\uD83D\uDC95\": 3,\n    \"\uD83D\uDC4F\": 2,\n    \"\uD83D\uDE01\": 2,\n    \"\u263A\": 3,\n    \"\u2661\": 3,\n    \"\uD83D\uDC4D\": 2,\n    \"\uD83D\uDE29\": -2,\n    \"\uD83D\uDE4F\": 2,\n    \"\u270C\": 2,\n    \"\uD83D\uDE0F\": 1,\n    \"\uD83D\uDE09\": 2,\n    \"\uD83D\uDE4C\": 2,\n    \"\uD83D\uDE48\": 2,\n    \"\uD83D\uDCAA\": 2,\n    \"\uD83D\uDE04\": 2,\n    \"\uD83D\uDE12\": -2,\n    \"\uD83D\uDC83\": 3,\n    \"\uD83D\uDC96\": 3,\n    \"\uD83D\uDE03\": 2,\n    \"\uD83D\uDE14\": -1,\n    \"\uD83C\uDF89\": 3,\n    \"\uD83D\uDE1C\": 2,\n    \"\uD83C\uDF38\": 3,\n    \"\uD83D\uDC9C\": 3,\n    \"\uD83D\uDC99\": 3,\n    \"\u2728\": 1,\n    \"\uD83D\uDC97\": 3,\n    \"\u2605\": 1,\n    \"\u2588\": -1,\n    \"\u2600\": 2,\n    \"\uD83D\uDE21\": -1,\n    \"\uD83D\uDE0E\": 2,\n    \"\uD83D\uDC8B\": 3,\n    \"\uD83D\uDE0B\": 3,\n    \"\uD83D\uDE4A\": 2,\n    \"\uD83D\uDE34\": -1,\n    \"\uD83C\uDFB6\": 2,\n    \"\uD83D\uDC9E\": 3,\n    \"\uD83D\uDE0C\": 2,\n    \"\uD83D\uDD2B\": -1,\n    \"\uD83D\uDC9B\": 3,\n    \"\uD83D\uDC81\": 1,\n    \"\uD83D\uDC9A\": 3,\n    \"\u266B\": 1,\n    \"\uD83D\uDE1E\": -1,\n    \"\uD83D\uDE06\": 2,\n    \"\uD83D\uDE1D\": 2,\n    \"\uD83D\uDE2A\": -1,\n    \"\uD83D\uDE2B\": -1,\n    \"\uD83D\uDC4A\": 1,\n    \"\uD83D\uDC80\": -2,\n    \"\uD83D\uDE00\": 2,\n    \"\uD83D\uDE1A\": 3,\n    \"\uD83D\uDE3B\": 3,\n    \"\uD83D\uDC98\": 3,\n    \"\u2615\": 1,\n    \"\uD83D\uDC4B\": 2,\n    \"\uD83C\uDF8A\": 3,\n    \"\uD83C\uDF55\": 2,\n    \"\u2744\": 2,\n    \"\uD83D\uDE15\": -2,\n    \"\uD83D\uDC94\": -1,\n    \"\uD83D\uDE24\": -2,\n    \"\uD83D\uDE08\": 1,\n    \"\u2708\": 2,\n    \"\uD83D\uDD1D\": 2,\n    \"\uD83D\uDE30\": -1,\n    \"\u26BD\": 3,\n    \"\uD83D\uDE11\": -2,\n    \"\uD83D\uDC51\": 3,\n    \"\uD83D\uDC49\": 1,\n    \"\uD83C\uDF43\": 1,\n    \"\uD83C\uDF81\": 3,\n    \"\uD83D\uDE20\": -2,\n    \"\uD83D\uDC27\": 2,\n    \"\u2606\": 2,\n    \"\uD83C\uDF40\": 1,\n    \"\uD83C\uDF88\": 3,\n    \"\uD83C\uDF85\": 1,\n    \"\uD83D\uDE13\": -1,\n    \"\uD83D\uDE23\": -2,\n    \"\uD83D\uDE10\": -2,\n    \"\u270A\": 2,\n    \"\uD83D\uDE28\": -1,\n    \"\uD83D\uDE16\": -1,\n    \"\uD83D\uDCA4\": 1,\n    \"\uD83D\uDC93\": 3,\n    \"\uD83D\uDC4E\": -1,\n    \"\uD83D\uDCA6\": 2,\n    \"\u2714\": 1,\n    \"\uD83D\uDE37\": -1,\n    \"\uD83D\uDE4B\": 2,\n    \"\uD83C\uDF84\": 2,\n    \"\uD83D\uDCA9\": -1,\n    \"\uD83C\uDFB5\": 2,\n    \"\uD83D\uDE1B\": 3,\n    \"\uD83D\uDC6F\": 2,\n    \"\uD83D\uDC8E\": 2,\n    \"\uD83C\uDF3F\": 1,\n    \"\uD83C\uDF82\": 3,\n    \"\uD83C\uDF1F\": 1,\n    \"\uD83D\uDD2E\": 1,\n    \"\uD83D\uDC6B\": 1,\n    \"\uD83C\uDFC6\": 3,\n    \"\u2716\": 1,\n    \"\u261D\": 1,\n    \"\uD83D\uDE19\": 3,\n    \"\u26C4\": 2,\n    \"\uD83D\uDC45\": 2,\n    \"\u266A\": 2,\n    \"\uD83C\uDF42\": 2,\n    \"\uD83D\uDC8F\": 1,\n    \"\uD83C\uDF34\": 2,\n    \"\uD83D\uDC48\": 2,\n    \"\uD83C\uDF39\": 3,\n    \"\uD83D\uDE46\": 2,\n    \"\uD83D\uDC7B\": 1,\n    \"\uD83D\uDCB0\": 1,\n    \"\uD83C\uDF7B\": 2,\n    \"\uD83D\uDE45\": -2,\n    \"\uD83C\uDF1E\": 2,\n    \"\uD83C\uDF41\": 2,\n    \"\u2B50\": 2,\n    \"\u25AA\": 1,\n    \"\uD83C\uDF80\": 3,\n    \"\uD83D\uDC37\": 1,\n    \"\uD83D\uDE49\": 1,\n    \"\uD83C\uDF3A\": 2,\n    \"\uD83D\uDC85\": 1,\n    \"\uD83D\uDC36\": 2,\n    \"\uD83C\uDF1A\": 2,\n    \"\uD83D\uDC7D\": 1,\n    \"\uD83C\uDFA4\": 2,\n    \"\uD83D\uDC6D\": 2,\n    \"\uD83C\uDFA7\": 2,\n    \"\uD83D\uDC46\": 1,\n    \"\uD83C\uDF78\": 2,\n    \"\uD83C\uDF77\": 2,\n    \"\u00AE\": 1,\n    \"\uD83C\uDF49\": 3,\n    \"\uD83D\uDE07\": 3,\n    \"\uD83C\uDFC3\": 2,\n    \"\uD83D\uDE3F\": -2,\n    \"\u2502\": 1,\n    \"\uD83C\uDF7A\": 2,\n    \"\u25B6\": 1,\n    \"\uD83D\uDE32\": -1,\n    \"\uD83C\uDFB8\": 2,\n    \"\uD83C\uDF79\": 3,\n    \"\uD83D\uDCAB\": 2,\n    \"\uD83D\uDCDA\": 1,\n    \"\uD83D\uDE36\": -1,\n    \"\uD83C\uDF37\": 2,\n    \"\uD83D\uDC9D\": 3,\n    \"\uD83D\uDCA8\": 1,\n    \"\uD83C\uDFC8\": 2,\n    \"\uD83D\uDC8D\": 2,\n    \"\u2614\": 1,\n    \"\uD83D\uDC78\": 3,\n    \"\uD83C\uDDEA\": 3,\n    \"\u2591\": -1,\n    \"\uD83C\uDF69\": 1,\n    \"\uD83D\uDC7E\": 1,\n    \"\u2601\": 1,\n    \"\uD83C\uDF3B\": 2,\n    \"\u21BF\": 3,\n    \"\uD83D\uDC2F\": 2,\n    \"\uD83D\uDC7C\": 1,\n    \"\uD83C\uDF54\": 1,\n    \"\uD83D\uDE38\": 2,\n    \"\uD83D\uDC76\": 2,\n    \"\u21BE\": 3,\n    \"\uD83D\uDC90\": 3,\n    \"\uD83C\uDF0A\": 2,\n    \"\uD83C\uDF66\": 2,\n    \"\uD83C\uDF53\": 3,\n    \"\uD83D\uDC47\": 1,\n    \"\uD83D\uDC86\": 1,\n    \"\uD83C\uDF74\": 2,\n    \"\uD83D\uDE27\": -1,\n    \"\uD83C\uDDF8\": 2,\n    \"\uD83D\uDE2E\": 1,\n    \"\uD83D\uDEAB\": -3,\n    \"\uD83D\uDE3D\": 2,\n    \"\uD83C\uDF08\": 2,\n    \"\uD83D\uDE40\": 1,\n    \"\u26A0\": -1,\n    \"\uD83C\uDFAE\": 2,\n    \"\u256F\": -1,\n    \"\uD83C\uDF46\": 2,\n    \"\uD83C\uDF70\": 2,\n    \"\u2713\": 1,\n    \"\uD83D\uDC50\": -1,\n    \"\uD83C\uDF5F\": 1,\n    \"\uD83C\uDF4C\": 2,\n    \"\uD83D\uDC91\": 3,\n    \"\uD83D\uDC6C\": -1,\n    \"\uD83D\uDC23\": 2,\n    \"\uD83C\uDF83\": 3,\n    \"\u25AC\": 2,\n    \"\uFFFC\": -3,\n    \"\uD83D\uDC3E\": 3,\n    \"\uD83C\uDF93\": 2,\n    \"\uD83C\uDFCA\": 2,\n    \"\uD83D\uDCF7\": 2,\n    \"\uD83D\uDC44\": 2,\n    \"\uD83C\uDF3C\": 4,\n    \"\uD83D\uDEB6\": -1,\n    \"\uD83D\uDC31\": 2,\n    \"\uD83D\uDC38\": -1,\n    \"\uD83C\uDDFA\": 2,\n    \"\uD83D\uDC7F\": -3,\n    \"\uD83D\uDEAC\": 2,\n    \"\u273F\": 1,\n    \"\uD83D\uDC12\": 2,\n    \"\uD83C\uDF0D\": 3,\n    \"\u250A\": 5,\n    \"\uD83D\uDC25\": 3,\n    \"\uD83D\uDC3C\": 1,\n    \"\uD83C\uDFA5\": 1,\n    \"\uD83D\uDC84\": 2,\n    \"\u26D4\": 2,\n    \"\uD83C\uDFC0\": 1,\n    \"\uD83D\uDC89\": 1,\n    \"\uD83D\uDC9F\": 3,\n    \"\uD83D\uDE97\": 1,\n    \"\uD83D\uDCDD\": 1,\n    \"\u2666\": 2,\n    \"\uD83D\uDCAD\": 1,\n    \"\uD83C\uDF19\": 3,\n    \"\uD83D\uDC1F\": 3,\n    \"\uD83D\uDC63\": 1,\n    \"\u2702\": -3,\n    \"\uD83D\uDDFF\": 2,\n    \"\uD83D\uDC6A\": -1,\n    \"\uD83C\uDF6D\": 1,\n    \"\uD83C\uDF03\": 2,\n    \"\u274C\": 1,\n    \"\uD83D\uDC30\": 3,\n    \"\uD83D\uDC8A\": 2,\n    \"\uD83D\uDEA8\": 3,\n    \"\uD83D\uDE26\": -2,\n    \"\uD83C\uDF6A\": 1,\n    \"\uD83C\uDF63\": -2,\n    \"\u2727\": 1,\n    \"\uD83C\uDF86\": 3,\n    \"\uD83C\uDF8E\": 4,\n    \"\uD83C\uDDE9\": 3,\n    \"\u2705\": 2,\n    \"\uD83D\uDCF1\": 1,\n    \"\uD83D\uDE4D\": -2,\n    \"\uD83C\uDF51\": 1,\n    \"\uD83C\uDFBC\": 1,\n    \"\uD83D\uDD0A\": 2,\n    \"\uD83C\uDF0C\": 2,\n    \"\uD83C\uDF4E\": 1,\n    \"\uD83D\uDC3B\": 2,\n    \"\u2570\": -1,\n    \"\uD83D\uDC87\": 1,\n    \"\u266C\": 1,\n    \"\uD83D\uDD34\": 2,\n    \"\uD83C\uDF71\": -2,\n    \"\uD83C\uDF4A\": 2,\n    \"\uD83C\uDF52\": 1,\n    \"\uD83D\uDC2D\": 3,\n    \"\uD83D\uDC5F\": 2,\n    \"\uD83C\uDF0E\": 1,\n    \"\uD83C\uDF4D\": 2,\n    \"\uD83D\uDC2E\": 3,\n    \"\uD83D\uDCF2\": 1,\n    \"\u263C\": 1,\n    \"\uD83C\uDF05\": 1,\n    \"\uD83C\uDDF7\": 3,\n    \"\uD83D\uDC60\": 1,\n    \"\uD83C\uDF3D\": 2,\n    \"\uD83D\uDCA7\": -1,\n    \"\uD83C\uDF6C\": 1,\n    \"\uD83D\uDE3A\": 2,\n    \"\uD83D\uDE80\": 2,\n    \"\u00A6\": 3,\n    \"\uD83D\uDCA2\": 1,\n    \"\uD83C\uDFAC\": 1,\n    \"\uD83C\uDF67\": 1,\n    \"\uD83C\uDF5C\": 2,\n    \"\uD83D\uDC0F\": 3,\n    \"\uD83C\uDFC4\": 2,\n    \"\u27A4\": 1,\n    \"\u2B06\": 1,\n    \"\uD83C\uDF4B\": 1,\n    \"\uD83C\uDD97\": 2,\n    \"\u26AA\": 2,\n    \"\uD83D\uDCFA\": 2,\n    \"\uD83C\uDF45\": 1,\n    \"\u26C5\": 2,\n    \"\uD83D\uDC22\": 1,\n    \"\uD83D\uDC59\": 2,\n    \"\uD83C\uDFE1\": 2,\n    \"\uD83C\uDF3E\": 2,\n    \"\u25C9\": 1,\n    \"\u270F\": 1,\n    \"\uD83D\uDC2C\": 2,\n    \"\uD83C\uDDF9\": 3,\n    \"\u2663\": 1,\n    \"\uD83D\uDC1D\": 1,\n    \"\uD83C\uDF1D\": 1,\n    \"\uD83C\uDDEE\": 3,\n    \"\uD83D\uDD0B\": -3,\n    \"\uD83D\uDC0D\": 1,\n    \"\u2654\": 2,\n    \"\uD83D\uDD35\": 1,\n    \"\uD83D\uDE3E\": -2,\n    \"\uD83C\uDF15\": 3,\n    \"\uD83D\uDC28\": 2,\n    \"\uD83D\uDD10\": 1,\n    \"\uD83D\uDCBF\": 3,\n    \"\uD83C\uDF33\": 2,\n    \"\uD83D\uDC70\": 2,\n    \"\u2740\": 2,\n    \"\u2693\": 3,\n    \"\uD83D\uDEB4\": 3,\n    \"\u2580\": -1,\n    \"\uD83D\uDC57\": 1,\n    \"\u2795\": 2,\n    \"\uD83D\uDCAC\": 2,\n    \"\u2592\": -1,\n    \"\uD83D\uDD1C\": 1,\n    \"\uD83C\uDF68\": 1,\n    \"\uD83D\uDCB2\": 1,\n    \"\uD83C\uDF59\": 1,\n    \"\uD83C\uDF65\": -4,\n    \"\u25B8\": 1,\n    \"\u265B\": 1,\n    \"\uD83D\uDE3C\": 1,\n    \"\uD83D\uDC19\": 2,\n    \"\uD83D\uDC68\": 2,\n    \"\uD83C\uDF5A\": 2,\n    \"\u2668\": 4,\n    \"\uD83C\uDFB9\": 1,\n    \"\u2655\": 2,\n    \"\u2583\": 5,\n    \"\uD83C\uDDEC\": 1,\n    \"\uD83C\uDDE7\": 1,\n    \"\u2620\": -1,\n    \"\uD83D\uDC20\": 2,\n    \"\uD83D\uDEB9\": 3,\n    \"\uD83D\uDCB5\": 2,\n    \"\u2730\": 4,\n    \"\u2560\": 1,\n    \"\uD83D\uDC5B\": 2,\n    \"\uD83C\uDF31\": 3,\n    \"\uD83D\uDCBB\": 1,\n    \"\uD83C\uDF0F\": 1,\n    \"\u2584\": -1,\n    \"\uD83D\uDC53\": 1,\n    \"\u25C4\": 1,\n    \"\u26BE\": -1,\n    \"\uD83C\uDF32\": 2,\n    \"\uD83D\uDC74\": 1,\n    \"\uD83C\uDFE0\": 2,\n    \"\uD83C\uDF47\": 1,\n    \"\uD83C\uDF58\": 2,\n    \"\uD83D\uDC07\": 1,\n    \"\uD83D\uDD1E\": -1,\n    \"\uD83D\uDC75\": 2,\n    \"\u25C0\": 1,\n    \"\uD83D\uDD19\": 1,\n    \"\uD83C\uDF35\": 1,\n    \"\uD83C\uDF6E\": -1,\n    \"\uD83C\uDF87\": 3,\n    \"\uD83D\uDC0E\": 2,\n    \"\u2794\": -1,\n    \"\uD83D\uDC24\": 2,\n    \"\u2569\": 1,\n    \"\uD83C\uDF11\": 2,\n    \"\uD83D\uDEB2\": 2,\n    \"\uD83D\uDC11\": -1,\n    \"\uD83C\uDFC1\": 2,\n    \"\uD83C\uDFBE\": 3,\n    \"\u255A\": 1,\n    \"\uD83C\uDE39\": 1,\n    \"\uD83D\uDC6E\": -2,\n    \"\u2639\": -3,\n    \"\uD83D\uDC35\": 2,\n    \"\u272A\": 1,\n    \"\u25D5\": 2,\n    \"\uD83D\uDDFC\": 3,\n    \"\u2590\": -1,\n    \"\u2660\": 1,\n    \"\u2533\": -2,\n    \"\uD83D\uDC7A\": -2,\n    \"\uD83D\uDC1A\": 1,\n    \"\uD83D\uDC42\": -1,\n    \"\uD83D\uDDFD\": 1,\n    \"\uD83C\uDF75\": 2,\n    \"\uD83C\uDD92\": 2,\n    \"\uD83D\uDC3A\": 1,\n    \"\u21E8\": 2,\n    \"\uD83C\uDF13\": 3,\n    \"\uD83D\uDD12\": 1,\n    \"\u256C\": -1,\n    \"\uD83D\uDC73\": 3,\n    \"\uD83C\uDF02\": 1,\n    \"\uD83D\uDE8C\": 1,\n    \"\u2669\": 3,\n    \"\uD83C\uDF61\": -1,\n    \"\u2765\": 1,\n    \"\uD83C\uDFA1\": 1,\n    \"\uD83D\uDC8C\": 2,\n    \"\uD83D\uDC29\": 2,\n    \"\uD83C\uDF1C\": 2,\n    \"\u231A\": 1,\n    \"\uD83D\uDEBF\": 3,\n    \"\uD83D\uDD06\": 3,\n    \"\uD83C\uDF1B\": 3,\n    \"\uD83D\uDC82\": -1,\n    \"\uD83D\uDC14\": 1,\n    \"\uD83D\uDE4E\": -1,\n    \"\uD83C\uDFE9\": 2,\n    \"\uD83C\uDDEB\": 2,\n    \"\uD83D\uDD28\": -1,\n    \"\uD83D\uDCE2\": 2,\n    \"\uD83D\uDC26\": 2,\n    \"\uD83D\uDC32\": -1,\n    \"\u267B\": 2,\n    \"\uD83C\uDF18\": 3,\n    \"\uD83C\uDF14\": 3,\n    \"\uD83D\uDC56\": 2,\n    \"\uD83D\uDE17\": 3,\n    \"\uD83D\uDC04\": 1,\n    \"\u25DF\": -1,\n    \"\uD83C\uDF62\": -1,\n    \"\uD83C\uDFA8\": 1,\n    \"\u2B07\": 2,\n    \"\uD83D\uDEBC\": 3,\n    \"\uD83C\uDDF4\": 2,\n    \"\uD83C\uDF17\": 3,\n    \"\uD83C\uDF16\": 3,\n    \"\uD83D\uDD05\": 5,\n    \"\uD83D\uDC5C\": 1,\n    \"\uD83D\uDC0C\": 3,\n    \"\uD83D\uDCBC\": 3,\n    \"\uD83D\uDC39\": 1,\n    \"\uD83C\uDF20\": 3,\n    \"\uD83D\uDC08\": 1,\n    \"\uD83C\uDF01\": 1,\n    \"\u26AB\": 1,\n    \"\u2667\": 2,\n    \"\uD83C\uDFF0\": 1,\n    \"\uD83D\uDEB5\": 2,\n    \"\uD83C\uDFA2\": 2,\n    \"\uD83C\uDFB7\": 3,\n    \"\uD83C\uDF90\": 1,\n    \"\u2508\": -4,\n    \"\u2557\": 2,\n    \"\uD83C\uDF07\": 3,\n    \"\u23F0\": 2,\n    \"\uD83D\uDE82\": 1,\n    \"\u25E0\": 2,\n    \"\uD83C\uDFBF\": 2,\n    \"\uD83C\uDD94\": 4,\n    \"\uD83C\uDF12\": 3,\n    \"\uD83D\uDC2A\": 3,\n    \"\u2554\": 1,\n    \"\u255D\": 2,\n    \"\uD83D\uDC54\": 2,\n    \"\uD83C\uDD93\": 1,\n    \"\uD83D\uDC0B\": 1,\n    \"\u25BD\": 2,\n    \"\uD83D\uDC1B\": 1,\n    \"\uD83D\uDC55\": 2,\n    \"\uD83D\uDCB3\": 2,\n    \"\uD83C\uDFE7\": 5,\n    \"\uD83D\uDCA1\": 3,\n    \"\u2B05\": 2,\n    \"\uD83D\uDC2B\": 2,\n    \"\uD83C\uDDF1\": 2,\n    \"\uD83D\uDCF9\": 2,\n    \"\uD83D\uDC5E\": 2,\n    \"\uD83D\uDC5A\": 3,\n    \"\u25A1\": -2,\n    \"\uD83D\uDEA3\": 3,\n    \"\uD83C\uDFC9\": 3,\n    \"\uD83D\uDDFB\": 3,\n    \"\u2566\": 2,\n    \"\u26FA\": 3,\n    \"\uD83D\uDC15\": 1,\n    \"\uD83C\uDFC2\": 2,\n    \"\uD83D\uDC61\": 2,\n    \"\uD83D\uDCFB\": 2,\n    \"\u2712\": 1,\n    \"\uD83C\uDF30\": 3,\n    \"\uD83C\uDFE2\": 1,\n    \"\uD83C\uDF92\": 3,\n    \"\u2312\": 3,\n    \"\uD83C\uDFEB\": -2,\n    \"\uD83D\uDCF4\": 4,\n    \"\uD83D\uDEA2\": 1,\n    \"\uD83D\uDE9A\": -1,\n    \"\uD83D\uDC09\": 1,\n    \"\u2752\": 1,\n    \"\uD83D\uDD14\": 5,\n    \"\u25E2\": 4,\n    \"\uD83C\uDFE5\": 1,\n    \"\uD83D\uDE96\": -1,\n    \"\u258C\": -2,\n    \"\u261B\": 2,\n    \"\uD83D\uDC92\": 3,\n    \"\uD83D\uDEA4\": 2,\n    \"\uD83D\uDC10\": 2,\n    \"\u25A0\": -2,\n    \"\uD83D\uDD1A\": 2,\n    \"\uD83C\uDFBB\": 2,\n    \"\uD83D\uDD37\": 1,\n    \"\uD83C\uDFBD\": 2,\n    \"\uD83D\uDCC5\": 1,\n    \"\uD83C\uDFBA\": 3,\n    \"\uD83C\uDF48\": -3,\n    \"\u2709\": 1,\n    \"\u25E4\": 5,\n    \"\u25CB\": 3,\n    \"\uD83C\uDF7C\": 3,\n    \"\uD83D\uDE9B\": -2,\n    \"\uD83D\uDCD3\": 1,\n    \"\u2609\": 1,\n    \"\uD83D\uDCB4\": -2,\n    \"\u27B0\": -1,\n    \"\uD83D\uDD0C\": -1,\n    \"\uD83D\uDCD5\": 1,\n    \"\uD83D\uDCE3\": 2,\n    \"\uD83D\uDE93\": 1,\n    \"\uD83D\uDC17\": 3,\n    \"\u26F3\": 4,\n    \"\u253B\": -3,\n    \"\u251B\": 3,\n    \"\u2503\": 2,\n    \"\uD83D\uDCBA\": 1,\n    \"\uD83C\uDFC7\": -1,\n    \"\u263B\": 1,\n    \"\uD83D\uDCDE\": 2,\n    \"\u24B6\": -1,\n    \"\uD83C\uDF09\": 3,\n    \"\uD83D\uDEA9\": -2,\n    \"\u270E\": 3,\n    \"\uD83D\uDCC3\": 2,\n    \"\uD83C\uDFE8\": 1,\n    \"\uD83D\uDCCC\": -3,\n    \"\u264E\": -1,\n    \"\uD83D\uDCB7\": 2,\n    \"\uD83D\uDE84\": 3,\n    \"\u25B2\": 3,\n    \"\u26F5\": 3,\n    \"\uD83D\uDD38\": 1,\n    \"\uD83D\uDE9C\": 5,\n    \"\uD83D\uDC06\": 2,\n    \"\uD83D\uDC52\": 1,\n    \"\u2755\": 1,\n    \"\uD83D\uDD1B\": 2,\n    \"\u2662\": 2,\n    \"\uD83C\uDDF2\": 2,\n    \"\u2745\": 4,\n    \"\uD83D\uDC5D\": 2,\n    \"\u271E\": 2,\n    \"\u25E1\": 1,\n    \"\uD83C\uDF8B\": 3,\n    \"\uD83D\uDC65\": 1,\n    \"\uD83D\uDC21\": 1,\n    \"\u25C6\": 4,\n    \"\uD83D\uDD2D\": 2,\n    \"\uD83C\uDFAA\": 1,\n    \"\uD83D\uDC1C\": 3,\n    \"\u264C\": 4,\n    \"\u2610\": -5,\n    \"\uD83D\uDC77\": 1,\n    \"\uD83D\uDD08\": 1,\n    \"\uD83D\uDCC4\": 5,\n    \"\uD83D\uDE90\": 4,\n    \"\uD83C\uDF0B\": 3,\n    \"\uD83D\uDCE1\": 1,\n    \"\uD83D\uDEB3\": 5,\n    \"\u2718\": 4,\n    \"\uD83C\uDD70\": 1,\n    \"\uD83C\uDDFC\": 2,\n    \"\u2513\": 3,\n    \"\u2523\": 3,\n    \"\u24C1\": 2,\n    \"\u24BA\": 2,\n    \"\uD83D\uDC64\": 4,\n    \"\uD83D\uDE81\": 1,\n    \"\uD83C\uDFA0\": 3,\n    \"\uD83D\uDC01\": -2,\n    \"\uD83D\uDCD7\": 1,\n    \"\u2510\": -1,\n    \"\u2642\": 1,\n    \"\uD83D\uDCEF\": -1,\n    \"\uD83D\uDD29\": 1,\n    \"\uD83D\uDC62\": 4,\n    \"\u25C2\": 2,\n    \"\uD83D\uDCF0\": 1,\n    \"\uD83D\uDCF6\": 2,\n    \"\uD83C\uDF04\": 1,\n    \"\uD83D\uDDFE\": 2,\n    \"\uD83D\uDD36\": 2,\n    \"\uD83C\uDFE4\": 2,\n    \"\uD83C\uDFA9\": 2,\n    \"\u24C2\": 1,\n    \"\uD83D\uDD27\": -4,\n    \"\uD83D\uDC05\": 1,\n    \"\u266E\": 1,\n    \"\uD83C\uDD7E\": -1,\n    \"\uD83D\uDCE6\": 1,\n    \"\uD83D\uDE8A\": 1,\n    \"\uD83D\uDD32\": 3,\n    \"\u25B3\": 1,\n    \"\uD83D\uDCC6\": 5,\n    \"\u275B\": 2,\n    \"\uD83D\uDCC9\": 2,\n    \"\u25B5\": 2,\n    \"\uD83D\uDD0E\": 3,\n    \"\u261C\": 1,\n    \"\uD83C\uDDEF\": 2,\n    \"\uD83C\uDDF5\": 2,\n    \"\uD83D\uDCD8\": 1,\n    \"\u24D4\": 3,\n    \"\uD83D\uDD11\": 1,\n    \"\u2B55\": 2,\n    \"\uD83D\uDD18\": 1,\n    \"\uD83D\uDEAD\": 5,\n    \"\uD83D\uDE89\": 3,\n    \"\uD83D\uDEAA\": 3,\n    \"\u27B3\": 2,\n    \"\uD83D\uDE83\": 3,\n    \"\u252F\": -3,\n    \"\uD83C\uDD99\": 2,\n    \"\uD83C\uDD96\": 1,\n    \"\u2517\": 5,\n    \"\u24C4\": 2,\n    \"\u2747\": 3,\n    \"\u2734\": 3,\n    \"\u260A\": 5,\n    \"\uD83D\uDD15\": -2,\n    \"\u2B1B\": -2,\n    \"\uD83D\uDE9E\": 3,\n    \"\uD83C\uDF76\": 3,\n    \"\uD83C\uDF10\": 3,\n    \"\u2640\": 1,\n    \"\uD83D\uDE85\": 3,\n    \"\uD83D\uDE92\": -2,\n    \"\u264B\": 1,\n    \"\u264D\": 3,\n    \"\uD83D\uDD5D\": -2,\n    \"\u24D0\": 5,\n    \"\uD83D\uDCD9\": 1,\n    \"\u24C8\": 1,\n    \"\uD83D\uDCCB\": 3,\n    \"\uD83C\uDFB1\": 1,\n    \"\uD83D\uDC1E\": 1,\n    \"\uD83D\uDD3A\": 1,\n    \"\u24E1\": 5,\n    \"\u2664\": 3,\n    \"\uD83C\uDFAF\": 3,\n    \"\uD83D\uDD09\": 3,\n    \"\u21A9\": 5,\n    \"\uD83D\uDEBE\": 1,\n    \"\uD83C\uDFA3\": -4,\n    \"\uD83D\uDD23\": 1,\n    \"\u274E\": -5,\n    \"\u27A5\": 1,\n    \"\uD83C\uDF8C\": 5,\n    \"\u25E3\": 1,\n    \"\u23EC\": 5,\n    \"\u266D\": 1,\n    \"\u24DE\": 5,\n    \"\uD83D\uDD33\": 2,\n    \"\uD83C\uDFED\": 2,\n    \"\uD83C\uDFB3\": -3,\n    \"\u261A\": 5,\n    \"\u27BD\": 2,\n    \"\u27AB\": 2,\n    \"\u2796\": -5,\n    \"\uA4B0\": 2,\n    \"\uA4B1\": 2,\n    \"\u25DD\": -3,\n    \"\uD83D\uDCD1\": 5,\n    \"\u24E7\": 5,\n    \"\uD83D\uDD1F\": 5,\n    \"\u3013\": 5,\n    \"\u24DC\": 2,\n    \"\u27A0\": 5,\n    \"\uD83D\uDE86\": 2,\n    \"\u2105\": -5,\n    \"\u2603\": 2,\n    \"\uD83D\uDEBD\": 5,\n    \"\u24DD\": 5,\n    \"\u21E6\": 5,\n    \"\uD83D\uDC72\": 2,\n    \"\uD83D\uDEA1\": -3,\n    \"\uD83D\uDD2C\": 5,\n    \"\u2797\": -3,\n    \"\uD83D\uDCC8\": 2,\n    \"\u23EA\": 2,\n    \"\u25CE\": 5,\n    \"\uA4A6\": -5,\n    \"\uD83D\uDCCE\": 5,\n    \"\u2445\": 5,\n    \"\u272D\": 5,\n    \"\u2653\": 2,\n    \"\u250F\": 5,\n    \"\u2607\": 5,\n    \"\u0FCE\": -5,\n    \"\uD83D\uDC58\": 5,\n    \"\u2199\": 5,\n    \"\u24BB\": 2,\n    \"\u24CC\": 2,\n    \"\u24C5\": 2,\n    \"\uD83D\uDD51\": 2,\n    \"\uD83D\uDD5B\": 5,\n    \"\u2648\": -5,\n    \"\u21AC\": 5,\n    \"\u270D\": 5,\n    \"\uD83C\uDFE6\": 5,\n    \"\uD83D\uDD3B\": 5,\n    \"\u24DF\": 5,\n    \"\u24D5\": 5,\n    \"\u24D8\": 5,\n    \"\u267F\": 5,\n    \"\u21D7\": 5,\n    \"\u21D8\": 5,\n    \"\u24E8\": 5,\n    \"\u24D9\": 5,\n    \"\u25AB\": 5,\n    \"\uD83D\uDD07\": 5,\n    \"\u2303\": -5,\n    \"\uD83D\uDD16\": 5,\n    \"\uD83D\uDCDC\": 5,\n    \"\uD83D\uDE9D\": 5,\n    \"\u2518\": -5,\n    \"\u271D\": -5,\n    \"\u2363\": -5,\n    \"\uD83D\uDCEE\": -5,\n    \"\uD83D\uDD55\": -5,\n    \"\uD83D\uDD2F\": 5,\n    \"\u27B8\": 5,\n    \"\uA4B5\": 5,\n    \"\uD83D\uDD65\": -5,\n    \"\u273D\": 5,\n    \"\uD83D\uDCFC\": 5,\n    \"\uD83D\uDD50\": -5,\n    \"\uD83C\uDC04\": 5,\n    \"\u272C\": 5,\n    \"\u272B\": 5,\n    \"\uD83D\uDD54\": -5,\n    \"\u2763\": 5,\n    \"\uD83D\uDCEB\": 5,\n    \"\uD83C\uDE50\": 5,\n    \"\uD83C\uDE02\": -5,\n    \"\uD83C\uDFB0\": -5,\n    \"\u0482\": -5,\n    \"\u2564\": -5,\n    \"\uD83D\uDCD4\": 5\n}", "{\n  \"abandon\": -2,\n  \"abandoned\": -2,\n  \"abandons\": -2,\n  \"abducted\": -2,\n  \"abduction\": -2,\n  \"abductions\": -2,\n  \"abhor\": -3,\n  \"abhorred\": -3,\n  \"abhorrent\": -3,\n  \"abhors\": -3,\n  \"abilities\": 2,\n  \"ability\": 2,\n  \"aboard\": 1,\n  \"aborted\": -1,\n  \"aborts\": -1,\n  \"absentee\": -1,\n  \"absentees\": -1,\n  \"absolve\": 2,\n  \"absolved\": 2,\n  \"absolves\": 2,\n  \"absolving\": 2,\n  \"absorbed\": 1,\n  \"abuse\": -3,\n  \"abused\": -3,\n  \"abuses\": -3,\n  \"abusing\": -3,\n  \"abusive\": -3,\n  \"accept\": 1,\n  \"acceptable\": 1,\n  \"acceptance\": 1,\n  \"accepted\": 1,\n  \"accepting\": 1,\n  \"accepts\": 1,\n  \"accessible\": 1,\n  \"accident\": -2,\n  \"accidental\": -2,\n  \"accidentally\": -2,\n  \"accidents\": -2,\n  \"acclaim\": 2,\n  \"acclaimed\": 2,\n  \"accolade\": 2,\n  \"accomplish\": 2,\n  \"accomplished\": 2,\n  \"accomplishes\": 2,\n  \"accomplishment\": 2,\n  \"accomplishments\": 2,\n  \"accusation\": -2,\n  \"accusations\": -2,\n  \"accuse\": -2,\n  \"accused\": -2,\n  \"accuses\": -2,\n  \"accusing\": -2,\n  \"ache\": -2,\n  \"achievable\": 1,\n  \"aching\": -2,\n  \"acquit\": 2,\n  \"acquits\": 2,\n  \"acquitted\": 2,\n  \"acquitting\": 2,\n  \"acrimonious\": -3,\n  \"active\": 1,\n  \"adequate\": 1,\n  \"admire\": 3,\n  \"admired\": 3,\n  \"admires\": 3,\n  \"admiring\": 3,\n  \"admit\": -1,\n  \"admits\": -1,\n  \"admitted\": -1,\n  \"admonish\": -2,\n  \"admonished\": -2,\n  \"adopt\": 1,\n  \"adopts\": 1,\n  \"adorable\": 3,\n  \"adoration\": 3,\n  \"adore\": 3,\n  \"adored\": 3,\n  \"adores\": 3,\n  \"adoring\": 3,\n  \"adoringly\": 3,\n  \"advanced\": 1,\n  \"advantage\": 2,\n  \"advantageous\": 2,\n  \"advantageously\": 2,\n  \"advantages\": 2,\n  \"adventure\": 2,\n  \"adventures\": 2,\n  \"adventurous\": 2,\n  \"adversary\": -1,\n  \"advisable\": 1,\n  \"affected\": -1,\n  \"affection\": 3,\n  \"affectionate\": 3,\n  \"affectionateness\": 3,\n  \"afflicted\": -1,\n  \"affordable\": 2,\n  \"affronted\": -1,\n  \"aficionados\": 2,\n  \"afraid\": -2,\n  \"aggravate\": -2,\n  \"aggravated\": -2,\n  \"aggravates\": -2,\n  \"aggravating\": -2,\n  \"aggression\": -2,\n  \"aggressions\": -2,\n  \"aggressive\": -2,\n  \"aggressiveness\": -2,\n  \"aghast\": -2,\n  \"agog\": 2,\n  \"agonise\": -3,\n  \"agonised\": -3,\n  \"agonises\": -3,\n  \"agonising\": -3,\n  \"agonize\": -3,\n  \"agonized\": -3,\n  \"agonizes\": -3,\n  \"agonizing\": -3,\n  \"agree\": 1,\n  \"agreeable\": 2,\n  \"agreed\": 1,\n  \"agreement\": 1,\n  \"agrees\": 1,\n  \"alarm\": -2,\n  \"alarmed\": -2,\n  \"alarmist\": -2,\n  \"alarmists\": -2,\n  \"alas\": -1,\n  \"alert\": -1,\n  \"alienation\": -2,\n  \"alive\": 1,\n  \"allegation\": -2,\n  \"allegations\": -2,\n  \"allergic\": -2,\n  \"allow\": 1,\n  \"ally\": 2,\n  \"alone\": -2,\n  \"altruistic\": 2,\n  \"amaze\": 2,\n  \"amazed\": 2,\n  \"amazes\": 2,\n  \"amazing\": 4,\n  \"ambitious\": 2,\n  \"ambivalent\": -1,\n  \"amicable\": 2,\n  \"amuse\": 3,\n  \"amused\": 3,\n  \"amusement\": 3,\n  \"amusements\": 3,\n  \"anger\": -3,\n  \"angered\": -3,\n  \"angers\": -3,\n  \"angry\": -3,\n  \"anguish\": -3,\n  \"anguished\": -3,\n  \"animosity\": -2,\n  \"annoy\": -2,\n  \"annoyance\": -2,\n  \"annoyed\": -2,\n  \"annoying\": -2,\n  \"annoys\": -2,\n  \"antagonistic\": -2,\n  \"anti\": -1,\n  \"anticipation\": 1,\n  \"anxiety\": -2,\n  \"anxious\": -2,\n  \"apathetic\": -3,\n  \"apathy\": -3,\n  \"apeshit\": -3,\n  \"apocalyptic\": -2,\n  \"apologise\": -1,\n  \"apologised\": -1,\n  \"apologises\": -1,\n  \"apologising\": -1,\n  \"apologize\": -1,\n  \"apologized\": -1,\n  \"apologizes\": -1,\n  \"apologizing\": -1,\n  \"apology\": -1,\n  \"appalled\": -2,\n  \"appalling\": -2,\n  \"appealing\": 2,\n  \"appease\": 2,\n  \"appeased\": 2,\n  \"appeases\": 2,\n  \"appeasing\": 2,\n  \"applaud\": 2,\n  \"applauded\": 2,\n  \"applauding\": 2,\n  \"applauds\": 2,\n  \"applause\": 2,\n  \"appreciate\": 2,\n  \"appreciated\": 2,\n  \"appreciates\": 2,\n  \"appreciating\": 2,\n  \"appreciation\": 2,\n  \"apprehensive\": -2,\n  \"appropriate\": 2,\n  \"appropriately\": 2,\n  \"approval\": 2,\n  \"approved\": 2,\n  \"approves\": 2,\n  \"ardent\": 1,\n  \"arrest\": -2,\n  \"arrested\": -3,\n  \"arrests\": -2,\n  \"arrogant\": -2,\n  \"arsehole\": -4,\n  \"ashame\": -2,\n  \"ashamed\": -2,\n  \"ass\": -4,\n  \"assassination\": -3,\n  \"assassinations\": -3,\n  \"assault\": -2,\n  \"assaults\": -2,\n  \"asset\": 2,\n  \"assets\": 2,\n  \"assfucking\": -4,\n  \"asshole\": -4,\n  \"astonished\": 2,\n  \"astound\": 3,\n  \"astounded\": 3,\n  \"astounding\": 3,\n  \"astoundingly\": 3,\n  \"astounds\": 3,\n  \"atrocious\": -3,\n  \"atrocity\": -3,\n  \"attack\": -1,\n  \"attacked\": -1,\n  \"attacking\": -1,\n  \"attacks\": -1,\n  \"attract\": 1,\n  \"attracted\": 1,\n  \"attracting\": 2,\n  \"attraction\": 2,\n  \"attractions\": 2,\n  \"attractive\": 2,\n  \"attractively\": 2,\n  \"attractiveness\": 2,\n  \"attracts\": 1,\n  \"audacious\": 3,\n  \"aura\": 1,\n  \"authority\": 1,\n  \"avenge\": -2,\n  \"avenged\": -2,\n  \"avenger\": -2,\n  \"avengers\": -2,\n  \"avenges\": -2,\n  \"avenging\": -2,\n  \"avert\": -1,\n  \"averted\": -1,\n  \"averts\": -1,\n  \"avid\": 2,\n  \"avoid\": -1,\n  \"avoided\": -1,\n  \"avoids\": -1,\n  \"await\": -1,\n  \"awaited\": -1,\n  \"awaits\": -1,\n  \"award\": 3,\n  \"awarded\": 3,\n  \"awards\": 3,\n  \"awesome\": 4,\n  \"awful\": -3,\n  \"awkward\": -2,\n  \"axe\": -1,\n  \"axed\": -1,\n  \"backed\": 1,\n  \"backing\": 2,\n  \"backs\": 1,\n  \"bad\": -3,\n  \"bad luck\": -2,\n  \"badass\": -3,\n  \"badly\": -3,\n  \"badness\": -3,\n  \"bailout\": -2,\n  \"balanced\": 1,\n  \"bamboozle\": -2,\n  \"bamboozled\": -2,\n  \"bamboozles\": -2,\n  \"ban\": -2,\n  \"banish\": -1,\n  \"bankrupt\": -3,\n  \"bankruptcy\": -3,\n  \"bankster\": -3,\n  \"banned\": -2,\n  \"barbarian\": -2,\n  \"barbaric\": -2,\n  \"barbarous\": -2,\n  \"bargain\": 2,\n  \"barrier\": -2,\n  \"bastard\": -5,\n  \"bastards\": -5,\n  \"battle\": -1,\n  \"battled\": -1,\n  \"battles\": -1,\n  \"battling\": -2,\n  \"beaten\": -2,\n  \"beatific\": 3,\n  \"beating\": -1,\n  \"beauties\": 3,\n  \"beautiful\": 3,\n  \"beautifully\": 3,\n  \"beautify\": 3,\n  \"beauty\": 3,\n  \"befit\": 2,\n  \"befitting\": 2,\n  \"belittle\": -2,\n  \"belittled\": -2,\n  \"beloved\": 3,\n  \"benefactor\": 2,\n  \"benefactors\": 2,\n  \"benefit\": 2,\n  \"benefits\": 2,\n  \"benefitted\": 2,\n  \"benefitting\": 2,\n  \"benevolent\": 3,\n  \"bereave\": -2,\n  \"bereaved\": -2,\n  \"bereaves\": -2,\n  \"bereaving\": -2,\n  \"best\": 3,\n  \"best damn\": 4,\n  \"betray\": -3,\n  \"betrayal\": -3,\n  \"betrayed\": -3,\n  \"betraying\": -3,\n  \"betrays\": -3,\n  \"better\": 2,\n  \"bias\": -1,\n  \"biased\": -2,\n  \"big\": 1,\n  \"bitch\": -5,\n  \"bitches\": -5,\n  \"bitter\": -2,\n  \"bitterest\": -2,\n  \"bitterly\": -2,\n  \"bizarre\": -2,\n  \"blackmail\": -3,\n  \"blackmailed\": -3,\n  \"blackmailing\": -3,\n  \"blackmails\": -3,\n  \"blah\": -2,\n  \"blame\": -2,\n  \"blamed\": -2,\n  \"blames\": -2,\n  \"blaming\": -2,\n  \"bless\": 2,\n  \"blesses\": 2,\n  \"blessing\": 3,\n  \"blessings\": 3,\n  \"blind\": -1,\n  \"bliss\": 3,\n  \"blissful\": 3,\n  \"blithe\": 2,\n  \"bloated\": -1,\n  \"block\": -1,\n  \"blockade\": -2,\n  \"blockbuster\": 3,\n  \"blocked\": -1,\n  \"blocking\": -1,\n  \"blocks\": -1,\n  \"bloody\": -3,\n  \"blurry\": -2,\n  \"boastful\": -2,\n  \"bold\": 2,\n  \"boldly\": 2,\n  \"bomb\": -1,\n  \"boost\": 1,\n  \"boosted\": 1,\n  \"boosting\": 1,\n  \"boosts\": 1,\n  \"bore\": -2,\n  \"bored\": -2,\n  \"boring\": -3,\n  \"bother\": -2,\n  \"bothered\": -2,\n  \"bothers\": -2,\n  \"bothersome\": -2,\n  \"boycott\": -2,\n  \"boycotted\": -2,\n  \"boycotting\": -2,\n  \"boycotts\": -2,\n  \"brainwashing\": -3,\n  \"brave\": 2,\n  \"braveness\": 2,\n  \"bravery\": 2,\n  \"bravura\": 3,\n  \"breach\": -2,\n  \"breached\": -2,\n  \"breaches\": -2,\n  \"breaching\": -2,\n  \"breakthrough\": 3,\n  \"breathtaking\": 5,\n  \"bribe\": -3,\n  \"bribed\": -3,\n  \"bribes\": -3,\n  \"bribing\": -3,\n  \"bright\": 1,\n  \"brightest\": 2,\n  \"brightness\": 1,\n  \"brilliant\": 4,\n  \"brilliance\": 3,\n  \"brilliances\": 3,\n  \"brisk\": 2,\n  \"broke\": -1,\n  \"broken\": -1,\n  \"brooding\": -2,\n  \"brutal\": -3,\n  \"brutally\": -3,\n  \"bullied\": -2,\n  \"bullshit\": -4,\n  \"bully\": -2,\n  \"bullying\": -2,\n  \"bummer\": -2,\n  \"buoyant\": 2,\n  \"burden\": -2,\n  \"burdened\": -2,\n  \"burdening\": -2,\n  \"burdens\": -2,\n  \"burglar\": -2,\n  \"burglary\": -2,\n  \"calm\": 2,\n  \"calmed\": 2,\n  \"calming\": 2,\n  \"calms\": 2,\n  \"can't stand\": -3,\n  \"cancel\": -1,\n  \"cancelled\": -1,\n  \"cancelling\": -1,\n  \"cancels\": -1,\n  \"cancer\": -1,\n  \"capabilities\": 1,\n  \"capability\": 1,\n  \"capable\": 1,\n  \"captivated\": 3,\n  \"care\": 2,\n  \"carefree\": 1,\n  \"careful\": 2,\n  \"carefully\": 2,\n  \"carefulness\": 2,\n  \"careless\": -2,\n  \"cares\": 2,\n  \"caring\": 2,\n  \"cashing in\": -2,\n  \"casualty\": -2,\n  \"catastrophe\": -3,\n  \"catastrophic\": -4,\n  \"cautious\": -1,\n  \"celebrate\": 3,\n  \"celebrated\": 3,\n  \"celebrates\": 3,\n  \"celebrating\": 3,\n  \"celebration\": 3,\n  \"celebrations\": 3,\n  \"censor\": -2,\n  \"censored\": -2,\n  \"censors\": -2,\n  \"certain\": 1,\n  \"chagrin\": -2,\n  \"chagrined\": -2,\n  \"challenge\": -1,\n  \"champion\": 2,\n  \"championed\": 2,\n  \"champions\": 2,\n  \"chance\": 2,\n  \"chances\": 2,\n  \"chaos\": -2,\n  \"chaotic\": -2,\n  \"charged\": -3,\n  \"charges\": -2,\n  \"charisma\": 2,\n  \"charitable\": 2,\n  \"charm\": 3,\n  \"charming\": 3,\n  \"charmingly\": 3,\n  \"charmless\": -3,\n  \"chastise\": -3,\n  \"chastised\": -3,\n  \"chastises\": -3,\n  \"chastising\": -3,\n  \"cheat\": -3,\n  \"cheated\": -3,\n  \"cheater\": -3,\n  \"cheaters\": -3,\n  \"cheating\": -3,\n  \"cheats\": -3,\n  \"cheer\": 2,\n  \"cheered\": 2,\n  \"cheerful\": 2,\n  \"cheerfully\": 2,\n  \"cheering\": 2,\n  \"cheerless\": -2,\n  \"cheers\": 2,\n  \"cheery\": 3,\n  \"cherish\": 2,\n  \"cherished\": 2,\n  \"cherishes\": 2,\n  \"cherishing\": 2,\n  \"chic\": 2,\n  \"chide\": -3,\n  \"chided\": -3,\n  \"chides\": -3,\n  \"chiding\": -3,\n  \"childish\": -2,\n  \"chilling\": -1,\n  \"choke\": -2,\n  \"choked\": -2,\n  \"chokes\": -2,\n  \"choking\": -2,\n  \"clarifies\": 2,\n  \"clarity\": 2,\n  \"clash\": -2,\n  \"classy\": 3,\n  \"clean\": 2,\n  \"cleaner\": 2,\n  \"clear\": 1,\n  \"cleared\": 1,\n  \"clearly\": 1,\n  \"clears\": 1,\n  \"clever\": 2,\n  \"clouded\": -1,\n  \"clueless\": -2,\n  \"cock\": -5,\n  \"cocksucker\": -5,\n  \"cocksuckers\": -5,\n  \"cocky\": -2,\n  \"coerced\": -2,\n  \"coercion\": -2,\n  \"collapse\": -2,\n  \"collapsed\": -2,\n  \"collapses\": -2,\n  \"collapsing\": -2,\n  \"collide\": -1,\n  \"collides\": -1,\n  \"colliding\": -1,\n  \"collision\": -2,\n  \"collisions\": -2,\n  \"colluding\": -3,\n  \"combat\": -1,\n  \"combats\": -1,\n  \"comedy\": 1,\n  \"comfort\": 2,\n  \"comfortable\": 2,\n  \"comfortably\": 2,\n  \"comforting\": 2,\n  \"comforts\": 2,\n  \"comic\": 1,\n  \"commend\": 2,\n  \"commended\": 2,\n  \"commit\": 1,\n  \"commitment\": 2,\n  \"commits\": 1,\n  \"committed\": 1,\n  \"committing\": 1,\n  \"compassion\": 2,\n  \"compassionate\": 2,\n  \"compelled\": 1,\n  \"competencies\": 1,\n  \"competent\": 2,\n  \"competitive\": 2,\n  \"complacent\": -2,\n  \"complain\": -2,\n  \"complained\": -2,\n  \"complaining\": -2,\n  \"complains\": -2,\n  \"complaint\": -2,\n  \"complaints\": -2,\n  \"complicating\": -2,\n  \"compliment\": 2,\n  \"complimented\": 2,\n  \"compliments\": 2,\n  \"comprehensive\": 2,\n  \"concerned\": -2,\n  \"conciliate\": 2,\n  \"conciliated\": 2,\n  \"conciliates\": 2,\n  \"conciliating\": 2,\n  \"condemn\": -2,\n  \"condemnation\": -2,\n  \"condemned\": -2,\n  \"condemns\": -2,\n  \"confidence\": 2,\n  \"confident\": 2,\n  \"confidently\": 2,\n  \"conflict\": -2,\n  \"conflicting\": -2,\n  \"conflictive\": -2,\n  \"conflicts\": -2,\n  \"confuse\": -2,\n  \"confused\": -2,\n  \"confusing\": -2,\n  \"congrats\": 2,\n  \"congratulate\": 2,\n  \"congratulation\": 2,\n  \"congratulations\": 2,\n  \"consent\": 2,\n  \"consents\": 2,\n  \"consolable\": 2,\n  \"conspiracy\": -3,\n  \"constipation\": -2,\n  \"constrained\": -2,\n  \"contagion\": -2,\n  \"contagions\": -2,\n  \"contagious\": -1,\n  \"contaminant\": -2,\n  \"contaminants\": -2,\n  \"contaminate\": -2,\n  \"contaminated\": -2,\n  \"contaminates\": -2,\n  \"contaminating\": -2,\n  \"contamination\": -2,\n  \"contaminations\": -2,\n  \"contempt\": -2,\n  \"contemptible\": -2,\n  \"contemptuous\": -2,\n  \"contemptuously\": -2,\n  \"contend\": -1,\n  \"contender\": -1,\n  \"contending\": -1,\n  \"contentious\": -2,\n  \"contestable\": -2,\n  \"controversial\": -2,\n  \"controversially\": -2,\n  \"controversies\": -2,\n  \"controversy\": -2,\n  \"convicted\": -2,\n  \"convince\": 1,\n  \"convinced\": 1,\n  \"convinces\": 1,\n  \"convivial\": 2,\n  \"cool\": 1,\n  \"cool stuff\": 3,\n  \"cornered\": -2,\n  \"corpse\": -1,\n  \"corrupt\": -3,\n  \"corrupted\": -3,\n  \"corrupting\": -3,\n  \"corruption\": -3,\n  \"corrupts\": -3,\n  \"costly\": -2,\n  \"courage\": 2,\n  \"courageous\": 2,\n  \"courageously\": 2,\n  \"courageousness\": 2,\n  \"courteous\": 2,\n  \"courtesy\": 2,\n  \"cover-up\": -3,\n  \"coward\": -2,\n  \"cowardly\": -2,\n  \"coziness\": 2,\n  \"cramp\": -1,\n  \"crap\": -3,\n  \"crappy\": -3,\n  \"crash\": -2,\n  \"crazier\": -2,\n  \"craziest\": -2,\n  \"crazy\": -2,\n  \"creative\": 2,\n  \"crestfallen\": -2,\n  \"cried\": -2,\n  \"cries\": -2,\n  \"crime\": -3,\n  \"crimes\": -3,\n  \"criminal\": -3,\n  \"criminals\": -3,\n  \"criminate\": -3,\n  \"criminated\": -3,\n  \"criminates\": -3,\n  \"crisis\": -3,\n  \"critic\": -2,\n  \"criticise\": -2,\n  \"criticised\": -2,\n  \"criticises\": -2,\n  \"criticising\": -2,\n  \"criticism\": -2,\n  \"criticize\": -2,\n  \"criticized\": -2,\n  \"criticizes\": -2,\n  \"criticizing\": -2,\n  \"critics\": -2,\n  \"critique\": -2,\n  \"crowding\": -1,\n  \"crude\": -1,\n  \"cruel\": -3,\n  \"cruelty\": -3,\n  \"crush\": -1,\n  \"crushed\": -2,\n  \"crushes\": -1,\n  \"crushing\": -1,\n  \"cry\": -1,\n  \"crying\": -2,\n  \"cunning\": 2,\n  \"cunt\": -5,\n  \"curious\": 1,\n  \"curse\": -1,\n  \"cut\": -1,\n  \"cutback\": -2,\n  \"cutbacks\": -2,\n  \"cute\": 2,\n  \"cuts\": -1,\n  \"cutting\": -1,\n  \"cynic\": -2,\n  \"cynical\": -2,\n  \"cynicism\": -2,\n  \"damage\": -3,\n  \"damaged\": -3,\n  \"damages\": -3,\n  \"damaging\": -3,\n  \"damn\": -2,\n  \"damn cute\": 3,\n  \"damn good\": 4,\n  \"damned\": -4,\n  \"damnit\": -4,\n  \"danger\": -2,\n  \"dangerous\": -2,\n  \"dangerously\": -2,\n  \"daredevil\": 2,\n  \"daring\": 2,\n  \"darkest\": -2,\n  \"darkness\": -1,\n  \"dauntless\": 2,\n  \"dazzling\": 3,\n  \"dead\": -3,\n  \"deadening\": -2,\n  \"deadlock\": -2,\n  \"deadly\": -3,\n  \"deafening\": -1,\n  \"dear\": 2,\n  \"dearly\": 3,\n  \"death\": -2,\n  \"deaths\": -2,\n  \"debonair\": 2,\n  \"debt\": -2,\n  \"deceit\": -3,\n  \"deceitful\": -3,\n  \"deceive\": -3,\n  \"deceived\": -3,\n  \"deceives\": -3,\n  \"deceiving\": -3,\n  \"deception\": -3,\n  \"deceptive\": -3,\n  \"decisive\": 1,\n  \"dedicated\": 2,\n  \"dedication\": 2,\n  \"defeat\": -2,\n  \"defeated\": -2,\n  \"defect\": -3,\n  \"defective\": -3,\n  \"defects\": -3,\n  \"defender\": 2,\n  \"defenders\": 2,\n  \"defenseless\": -2,\n  \"defer\": -1,\n  \"deferring\": -1,\n  \"defiant\": -1,\n  \"deficient\": -2,\n  \"deficiency\": -2,\n  \"deficiencies\": -2,\n  \"deficit\": -2,\n  \"deformed\": -2,\n  \"deformities\": -2,\n  \"deformity\": -2,\n  \"defraud\": -3,\n  \"defrauds\": -3,\n  \"deft\": 2,\n  \"defunct\": -2,\n  \"degrade\": -2,\n  \"degraded\": -2,\n  \"degrades\": -2,\n  \"dehumanize\": -2,\n  \"dehumanized\": -2,\n  \"dehumanizes\": -2,\n  \"dehumanizing\": -2,\n  \"deject\": -2,\n  \"dejected\": -2,\n  \"dejecting\": -2,\n  \"dejects\": -2,\n  \"delay\": -1,\n  \"delayed\": -1,\n  \"delectable\": 3,\n  \"delicious\": 3,\n  \"delight\": 3,\n  \"delighted\": 3,\n  \"delightful\": 3,\n  \"delightfully\": 3,\n  \"delighting\": 3,\n  \"delights\": 3,\n  \"demand\": -1,\n  \"demanded\": -1,\n  \"demanding\": -1,\n  \"demands\": -1,\n  \"demonstration\": -1,\n  \"demoralize\": -2,\n  \"demoralized\": -2,\n  \"demoralizes\": -2,\n  \"demoralizing\": -2,\n  \"denial\": -2,\n  \"denials\": -2,\n  \"denied\": -2,\n  \"denier\": -2,\n  \"deniers\": -2,\n  \"denies\": -2,\n  \"denounce\": -2,\n  \"denounces\": -2,\n  \"dent\": -2,\n  \"deny\": -2,\n  \"denying\": -2,\n  \"deplore\": -3,\n  \"deplored\": -3,\n  \"deplores\": -3,\n  \"deploring\": -3,\n  \"deport\": -2,\n  \"deported\": -2,\n  \"deporting\": -2,\n  \"deports\": -2,\n  \"deportation\": -2,\n  \"deportations\": -2,\n  \"depressed\": -2,\n  \"depressing\": -2,\n  \"deprivation\": -3,\n  \"derail\": -2,\n  \"derailed\": -2,\n  \"derails\": -2,\n  \"derelict\": -2,\n  \"deride\": -2,\n  \"derided\": -2,\n  \"derides\": -2,\n  \"deriding\": -2,\n  \"derision\": -2,\n  \"desirable\": 2,\n  \"desire\": 1,\n  \"desired\": 2,\n  \"desirous\": 2,\n  \"despair\": -3,\n  \"despairing\": -3,\n  \"despairs\": -3,\n  \"desperate\": -3,\n  \"desperately\": -3,\n  \"despondent\": -3,\n  \"destroy\": -3,\n  \"destroyed\": -3,\n  \"destroying\": -3,\n  \"destroys\": -3,\n  \"destruction\": -3,\n  \"destructive\": -3,\n  \"detached\": -1,\n  \"detain\": -2,\n  \"detained\": -2,\n  \"detention\": -2,\n  \"deteriorate\": -2,\n  \"deteriorated\": -2,\n  \"deteriorates\": -2,\n  \"deteriorating\": -2,\n  \"determined\": 2,\n  \"deterrent\": -2,\n  \"detract\": -1,\n  \"detracted\": -1,\n  \"detracts\": -1,\n  \"devastate\": -2,\n  \"devastated\": -2,\n  \"devastating\": -2,\n  \"devastation\": -2,\n  \"devastations\": -2,\n  \"devoted\": 3,\n  \"devotion\": 2,\n  \"devotional\": 2,\n  \"diamond\": 1,\n  \"dick\": -4,\n  \"dickhead\": -4,\n  \"die\": -3,\n  \"died\": -3,\n  \"difficult\": -1,\n  \"diffident\": -2,\n  \"dignity\": 2,\n  \"dilemma\": -1,\n  \"dilligence\": 2,\n  \"dipshit\": -3,\n  \"dire\": -3,\n  \"direful\": -3,\n  \"dirt\": -2,\n  \"dirtier\": -2,\n  \"dirtiest\": -2,\n  \"dirty\": -2,\n  \"disabilities\": -2,\n  \"disability\": -2,\n  \"disabling\": -1,\n  \"disadvantage\": -2,\n  \"disadvantaged\": -2,\n  \"disagree\": -2,\n  \"disagreeable\": -2,\n  \"disagreement\": -2,\n  \"disappear\": -1,\n  \"disappeared\": -1,\n  \"disappears\": -1,\n  \"disappoint\": -2,\n  \"disappointed\": -2,\n  \"disappointing\": -2,\n  \"disappointment\": -2,\n  \"disappointments\": -2,\n  \"disappoints\": -2,\n  \"disapproval\": -2,\n  \"disapprovals\": -2,\n  \"disapprove\": -2,\n  \"disapproved\": -2,\n  \"disapproves\": -2,\n  \"disapproving\": -2,\n  \"disaster\": -2,\n  \"disasters\": -2,\n  \"disastrous\": -3,\n  \"disbelieve\": -2,\n  \"discard\": -1,\n  \"discarded\": -1,\n  \"discarding\": -1,\n  \"discards\": -1,\n  \"discernment\": 2,\n  \"discomfort\": -2,\n  \"disconsolate\": -2,\n  \"disconsolation\": -2,\n  \"discontented\": -2,\n  \"discord\": -2,\n  \"discounted\": -1,\n  \"discouraged\": -2,\n  \"discredited\": -2,\n  \"discriminate\": -2,\n  \"discriminated\": -2,\n  \"discriminates\": -2,\n  \"discriminating\": -2,\n  \"discriminatory\": -2,\n  \"disdain\": -2,\n  \"disease\": -1,\n  \"diseases\": -1,\n  \"disgrace\": -2,\n  \"disgraced\": -2,\n  \"disguise\": -1,\n  \"disguised\": -1,\n  \"disguises\": -1,\n  \"disguising\": -1,\n  \"disgust\": -3,\n  \"disgusted\": -3,\n  \"disgustful\": -3,\n  \"disgusting\": -3,\n  \"disheartened\": -2,\n  \"dishonest\": -2,\n  \"disillusioned\": -2,\n  \"disinclined\": -2,\n  \"disjointed\": -2,\n  \"dislike\": -2,\n  \"disliked\": -2,\n  \"dislikes\": -2,\n  \"dismal\": -2,\n  \"dismayed\": -2,\n  \"dismissed\": -2,\n  \"disorder\": -2,\n  \"disorders\": -2,\n  \"disorganized\": -2,\n  \"disoriented\": -2,\n  \"disparage\": -2,\n  \"disparaged\": -2,\n  \"disparages\": -2,\n  \"disparaging\": -2,\n  \"displeased\": -2,\n  \"displeasure\": -2,\n  \"disproportionate\": -2,\n  \"dispute\": -2,\n  \"disputed\": -2,\n  \"disputes\": -2,\n  \"disputing\": -2,\n  \"disqualified\": -2,\n  \"disquiet\": -2,\n  \"disregard\": -2,\n  \"disregarded\": -2,\n  \"disregarding\": -2,\n  \"disregards\": -2,\n  \"disrespect\": -2,\n  \"disrespected\": -2,\n  \"disrupt\": -2,\n  \"disrupted\": -2,\n  \"disrupting\": -2,\n  \"disruption\": -2,\n  \"disruptions\": -2,\n  \"disruptive\": -2,\n  \"disrupts\": -2,\n  \"dissatisfied\": -2,\n  \"distasteful\": -2,\n  \"distinguished\": 2,\n  \"distort\": -2,\n  \"distorted\": -2,\n  \"distorting\": -2,\n  \"distorts\": -2,\n  \"distract\": -2,\n  \"distracted\": -2,\n  \"distraction\": -2,\n  \"distracts\": -2,\n  \"distress\": -2,\n  \"distressed\": -2,\n  \"distresses\": -2,\n  \"distressing\": -2,\n  \"distrust\": -3,\n  \"distrustful\": -3,\n  \"disturb\": -2,\n  \"disturbed\": -2,\n  \"disturbing\": -2,\n  \"disturbs\": -2,\n  \"dithering\": -2,\n  \"diverting\": -1,\n  \"dizzy\": -1,\n  \"dodging\": -2,\n  \"dodgy\": -2,\n  \"does not work\": -3,\n  \"dolorous\": -2,\n  \"donate\": 2,\n  \"donated\": 2,\n  \"donates\": 2,\n  \"donating\": 2,\n  \"donation\": 2,\n  \"dont like\": -2,\n  \"doom\": -2,\n  \"doomed\": -2,\n  \"doubt\": -1,\n  \"doubted\": -1,\n  \"doubtful\": -1,\n  \"doubting\": -1,\n  \"doubts\": -1,\n  \"douche\": -3,\n  \"douchebag\": -3,\n  \"dour\": -2,\n  \"downcast\": -2,\n  \"downer\": -2,\n  \"downhearted\": -2,\n  \"downside\": -2,\n  \"drag\": -1,\n  \"dragged\": -1,\n  \"drags\": -1,\n  \"drained\": -2,\n  \"dread\": -2,\n  \"dreaded\": -2,\n  \"dreadful\": -3,\n  \"dreading\": -2,\n  \"dream\": 1,\n  \"dreams\": 1,\n  \"dreary\": -2,\n  \"droopy\": -2,\n  \"drop\": -1,\n  \"dropped\": -1,\n  \"drown\": -2,\n  \"drowned\": -2,\n  \"drowns\": -2,\n  \"drudgery\": -2,\n  \"drunk\": -2,\n  \"dubious\": -2,\n  \"dud\": -2,\n  \"dull\": -2,\n  \"dumb\": -3,\n  \"dumbass\": -3,\n  \"dump\": -1,\n  \"dumped\": -2,\n  \"dumps\": -1,\n  \"dupe\": -2,\n  \"duped\": -2,\n  \"dupery\": -2,\n  \"durable\": 2,\n  \"dying\": -3,\n  \"dysfunction\": -2,\n  \"eager\": 2,\n  \"earnest\": 2,\n  \"ease\": 2,\n  \"easy\": 1,\n  \"ecstatic\": 4,\n  \"eerie\": -2,\n  \"eery\": -2,\n  \"effective\": 2,\n  \"effectively\": 2,\n  \"effectiveness\": 2,\n  \"effortlessly\": 2,\n  \"elated\": 3,\n  \"elation\": 3,\n  \"elegant\": 2,\n  \"elegantly\": 2,\n  \"embarrass\": -2,\n  \"embarrassed\": -2,\n  \"embarrasses\": -2,\n  \"embarrassing\": -2,\n  \"embarrassment\": -2,\n  \"embezzlement\": -3,\n  \"embittered\": -2,\n  \"embrace\": 1,\n  \"emergency\": -2,\n  \"empathetic\": 2,\n  \"empower\": 2,\n  \"empowerment\": 2,\n  \"emptiness\": -1,\n  \"empty\": -1,\n  \"enchanted\": 2,\n  \"encourage\": 2,\n  \"encouraged\": 2,\n  \"encouragement\": 2,\n  \"encourages\": 2,\n  \"encouraging\": 2,\n  \"endorse\": 2,\n  \"endorsed\": 2,\n  \"endorsement\": 2,\n  \"endorses\": 2,\n  \"enemies\": -2,\n  \"enemy\": -2,\n  \"energetic\": 2,\n  \"engage\": 1,\n  \"engages\": 1,\n  \"engrossed\": 1,\n  \"engrossing\": 3,\n  \"enjoy\": 2,\n  \"enjoyable\": 2,\n  \"enjoyed\": 2,\n  \"enjoying\": 2,\n  \"enjoys\": 2,\n  \"enlighten\": 2,\n  \"enlightened\": 2,\n  \"enlightening\": 2,\n  \"enlightens\": 2,\n  \"ennui\": -2,\n  \"enrage\": -2,\n  \"enraged\": -2,\n  \"enrages\": -2,\n  \"enraging\": -2,\n  \"enrapture\": 3,\n  \"enslave\": -2,\n  \"enslaved\": -2,\n  \"enslaves\": -2,\n  \"ensure\": 1,\n  \"ensuring\": 1,\n  \"enterprising\": 1,\n  \"entertaining\": 2,\n  \"enthral\": 3,\n  \"enthusiastic\": 3,\n  \"entitled\": 1,\n  \"entrusted\": 2,\n  \"envies\": -1,\n  \"envious\": -2,\n  \"environment-friendly\": 2,\n  \"envy\": -1,\n  \"envying\": -1,\n  \"erroneous\": -2,\n  \"error\": -2,\n  \"errors\": -2,\n  \"escape\": -1,\n  \"escapes\": -1,\n  \"escaping\": -1,\n  \"esteem\": 2,\n  \"esteemed\": 2,\n  \"ethical\": 2,\n  \"euphoria\": 3,\n  \"euphoric\": 4,\n  \"evacuate\": -1,\n  \"evacuated\": -1,\n  \"evacuates\": -1,\n  \"evacuating\": -1,\n  \"evacuation\": -1,\n  \"evergreen\": 2,\n  \"evergreens\": 2,\n  \"evergreening\": -3,\n  \"eviction\": -1,\n  \"evil\": -3,\n  \"exacerbate\": -2,\n  \"exacerbated\": -2,\n  \"exacerbates\": -2,\n  \"exacerbating\": -2,\n  \"exaggerate\": -2,\n  \"exaggerated\": -2,\n  \"exaggerates\": -2,\n  \"exaggerating\": -2,\n  \"exasparate\": -2,\n  \"exasperated\": -2,\n  \"exasperates\": -2,\n  \"exasperating\": -2,\n  \"excellence\": 3,\n  \"excellent\": 3,\n  \"excite\": 3,\n  \"excited\": 3,\n  \"excitement\": 3,\n  \"exciting\": 3,\n  \"exclude\": -1,\n  \"excluded\": -2,\n  \"exclusion\": -1,\n  \"exclusive\": 2,\n  \"excruciatingly\": -1,\n  \"excuse\": -1,\n  \"exempt\": -1,\n  \"exhausted\": -2,\n  \"exhilarated\": 3,\n  \"exhilarates\": 3,\n  \"exhilarating\": 3,\n  \"exonerate\": 2,\n  \"exonerated\": 2,\n  \"exonerates\": 2,\n  \"exonerating\": 2,\n  \"expand\": 1,\n  \"expands\": 1,\n  \"expel\": -2,\n  \"expelled\": -2,\n  \"expelling\": -2,\n  \"expels\": -2,\n  \"expertly\": 2,\n  \"exploit\": -2,\n  \"exploited\": -2,\n  \"exploiting\": -2,\n  \"exploits\": -2,\n  \"exploration\": 1,\n  \"explorations\": 1,\n  \"expose\": -1,\n  \"exposed\": -1,\n  \"exposes\": -1,\n  \"exposing\": -1,\n  \"exquisite\": 3,\n  \"extend\": 1,\n  \"extends\": 1,\n  \"extremist\": -2,\n  \"extremists\": -2,\n  \"exuberant\": 4,\n  \"exultant\": 3,\n  \"exultantly\": 3,\n  \"fabulous\": 4,\n  \"fabulously\": 4,\n  \"fad\": -2,\n  \"fag\": -3,\n  \"faggot\": -3,\n  \"faggots\": -3,\n  \"fail\": -2,\n  \"failed\": -2,\n  \"failing\": -2,\n  \"fails\": -2,\n  \"failure\": -2,\n  \"failures\": -2,\n  \"fainthearted\": -2,\n  \"fair\": 2,\n  \"fairness\": 2,\n  \"faith\": 1,\n  \"faithful\": 3,\n  \"fake\": -3,\n  \"faker\": -3,\n  \"fakes\": -3,\n  \"faking\": -3,\n  \"fallen\": -2,\n  \"falling\": -1,\n  \"false\": -1,\n  \"falsely\": -2,\n  \"falsified\": -3,\n  \"falsify\": -3,\n  \"fame\": 1,\n  \"famine\": -2,\n  \"famous\": 2,\n  \"fan\": 3,\n  \"fantastic\": 4,\n  \"farce\": -1,\n  \"fascinate\": 3,\n  \"fascinated\": 3,\n  \"fascinates\": 3,\n  \"fascinating\": 3,\n  \"fascination\": 3,\n  \"fascist\": -2,\n  \"fascists\": -2,\n  \"fatal\": -3,\n  \"fatalities\": -3,\n  \"fatality\": -3,\n  \"fatigue\": -2,\n  \"fatigued\": -2,\n  \"fatigues\": -2,\n  \"fatiguing\": -2,\n  \"favor\": 2,\n  \"favorable\": 2,\n  \"favorably\": 2,\n  \"favored\": 2,\n  \"favorite\": 2,\n  \"favorited\": 2,\n  \"favorites\": 2,\n  \"favors\": 2,\n  \"favour\": 2,\n  \"favourable\": 2,\n  \"favourably\": 2,\n  \"favoured\": 2,\n  \"favourite\": 2,\n  \"favourited\": 2,\n  \"favourites\": 2,\n  \"favours\": 2,\n  \"fear\": -2,\n  \"fearful\": -2,\n  \"fearfully\": -2,\n  \"fearing\": -2,\n  \"fearless\": 2,\n  \"fearlessness\": 2,\n  \"fearsome\": -2,\n  \"fed up\": -3,\n  \"feeble\": -2,\n  \"feeling\": 1,\n  \"felonies\": -3,\n  \"felony\": -3,\n  \"fertile\": 2,\n  \"fervent\": 2,\n  \"fervid\": 2,\n  \"festive\": 2,\n  \"fever\": -2,\n  \"fiasco\": -3,\n  \"fidgety\": -2,\n  \"fight\": -1,\n  \"fighting\": -2,\n  \"fine\": 2,\n  \"fines\": -2,\n  \"finest\": 3,\n  \"fire\": -2,\n  \"fired\": -2,\n  \"firing\": -2,\n  \"fit\": 1,\n  \"fitness\": 1,\n  \"filth\": -2,\n  \"filthy\": -2,\n  \"flagship\": 2,\n  \"flaw\": -2,\n  \"flawed\": -3,\n  \"flawless\": 2,\n  \"flawlessly\": 2,\n  \"flaws\": -2,\n  \"flees\": -1,\n  \"flop\": -2,\n  \"flops\": -2,\n  \"flu\": -2,\n  \"flustered\": -2,\n  \"focused\": 2,\n  \"fond\": 2,\n  \"fondness\": 2,\n  \"fool\": -2,\n  \"foolish\": -2,\n  \"fools\": -2,\n  \"forbid\": -1,\n  \"forbidden\": -2,\n  \"forbidding\": -2,\n  \"forced\": -1,\n  \"foreclosure\": -2,\n  \"foreclosures\": -2,\n  \"forefront\": 1,\n  \"forget\": -1,\n  \"forgetful\": -2,\n  \"forgettable\": -1,\n  \"forgive\": 1,\n  \"forgiving\": 1,\n  \"forgot\": -1,\n  \"forgotten\": -1,\n  \"fortune\": 2,\n  \"fortunate\": 2,\n  \"fortunately\": 2,\n  \"foul\": -3,\n  \"frantic\": -1,\n  \"fraud\": -4,\n  \"frauds\": -4,\n  \"fraudster\": -4,\n  \"fraudsters\": -4,\n  \"fraudulence\": -4,\n  \"fraudulent\": -4,\n  \"freak\": -2,\n  \"free\": 1,\n  \"freedom\": 2,\n  \"freedoms\": 2,\n  \"frenzy\": -3,\n  \"fresh\": 1,\n  \"friend\": 1,\n  \"friendliness\": 2,\n  \"friendly\": 2,\n  \"friendship\": 2,\n  \"fright\": -2,\n  \"frightened\": -2,\n  \"frightening\": -3,\n  \"frikin\": -2,\n  \"frisky\": 2,\n  \"frowning\": -1,\n  \"fruitless\": -2,\n  \"frustrate\": -2,\n  \"frustrated\": -2,\n  \"frustrates\": -2,\n  \"frustrating\": -2,\n  \"frustration\": -2,\n  \"ftw\": 3,\n  \"fuck\": -4,\n  \"fucked\": -4,\n  \"fucker\": -4,\n  \"fuckers\": -4,\n  \"fuckface\": -4,\n  \"fuckhead\": -4,\n  \"fuckin\": -4,\n  \"fucking\": -4,\n  \"fucking amazing\": 4,\n  \"fucking beautiful\": 4,\n  \"fucking cute\": 4,\n  \"fucking fantastic\": 4,\n  \"fucking good\": 4,\n  \"fucking great\": 4,\n  \"fucking hot\": 2,\n  \"fucking love\": 4,\n  \"fucking loves\": 4,\n  \"fucking perfect\": 4,\n  \"fucktard\": -4,\n  \"fud\": -3,\n  \"fuked\": -4,\n  \"fuking\": -4,\n  \"fulfill\": 2,\n  \"fulfilled\": 2,\n  \"fulfillment\": 2,\n  \"fulfills\": 2,\n  \"fuming\": -2,\n  \"fun\": 4,\n  \"funeral\": -1,\n  \"funerals\": -1,\n  \"funky\": 2,\n  \"funnier\": 4,\n  \"funny\": 4,\n  \"furious\": -3,\n  \"futile\": -2,\n  \"gag\": -2,\n  \"gagged\": -2,\n  \"gain\": 2,\n  \"gained\": 2,\n  \"gaining\": 2,\n  \"gains\": 2,\n  \"gallant\": 3,\n  \"gallantly\": 3,\n  \"gallantry\": 3,\n  \"game-changing\": 3,\n  \"garbage\": -1,\n  \"gem\": 3,\n  \"generous\": 2,\n  \"generously\": 2,\n  \"genial\": 3,\n  \"ghastly\": -2,\n  \"ghost\": -1,\n  \"giddy\": -2,\n  \"gift\": 2,\n  \"glad\": 3,\n  \"glamorous\": 3,\n  \"glamourous\": 3,\n  \"glee\": 3,\n  \"gleeful\": 3,\n  \"gloom\": -1,\n  \"gloomy\": -2,\n  \"glorious\": 2,\n  \"glory\": 2,\n  \"glum\": -2,\n  \"god\": 1,\n  \"goddamn\": -3,\n  \"godsend\": 4,\n  \"gold\": 2,\n  \"good\": 3,\n  \"goodlooking\": 3,\n  \"goodmorning\": 1,\n  \"goodness\": 3,\n  \"goodwill\": 3,\n  \"goofiness\": -2,\n  \"goofy\": -2,\n  \"grace\": 1,\n  \"graceful\": 2,\n  \"gracious\": 3,\n  \"grand\": 3,\n  \"grant\": 1,\n  \"granted\": 1,\n  \"granting\": 1,\n  \"grants\": 1,\n  \"grateful\": 3,\n  \"gratification\": 2,\n  \"grave\": -2,\n  \"gray\": -1,\n  \"grisly\": -2,\n  \"gr8\": 3,\n  \"great\": 3,\n  \"greater\": 3,\n  \"greatest\": 3,\n  \"greed\": -3,\n  \"greedy\": -2,\n  \"green wash\": -3,\n  \"green washing\": -3,\n  \"greenwash\": -3,\n  \"greenwasher\": -3,\n  \"greenwashers\": -3,\n  \"greenwashing\": -3,\n  \"greet\": 1,\n  \"greeted\": 1,\n  \"greeting\": 1,\n  \"greetings\": 2,\n  \"greets\": 1,\n  \"grey\": -1,\n  \"grief\": -2,\n  \"grieved\": -2,\n  \"grim\": -2,\n  \"gripping\": 2,\n  \"groan\": -2,\n  \"groaned\": -2,\n  \"groaning\": -2,\n  \"groans\": -2,\n  \"gross\": -2,\n  \"growing\": 1,\n  \"growth\": 2,\n  \"growths\": 2,\n  \"gruesome\": -3,\n  \"guarantee\": 1,\n  \"guilt\": -3,\n  \"guilty\": -3,\n  \"gullibility\": -2,\n  \"gullible\": -2,\n  \"gun\": -1,\n  \"ha\": 2,\n  \"hacked\": -1,\n  \"haha\": 3,\n  \"hahaha\": 3,\n  \"hahahah\": 3,\n  \"hail\": 2,\n  \"hailed\": 2,\n  \"hallelujah\": 3,\n  \"handpicked\": 1,\n  \"handsome\": 3,\n  \"hapless\": -2,\n  \"haplessness\": -2,\n  \"happiest\": 3,\n  \"happiness\": 3,\n  \"happy\": 3,\n  \"harass\": -3,\n  \"harassed\": -3,\n  \"harasses\": -3,\n  \"harassing\": -3,\n  \"harassment\": -3,\n  \"hard\": -1,\n  \"hardier\": 2,\n  \"hardship\": -2,\n  \"hardy\": 2,\n  \"harm\": -2,\n  \"harmed\": -2,\n  \"harmful\": -2,\n  \"harming\": -2,\n  \"harmony\": 2,\n  \"harmonious\": 2,\n  \"harmoniously\": 2,\n  \"harms\": -2,\n  \"harried\": -2,\n  \"harsh\": -2,\n  \"harsher\": -2,\n  \"harshest\": -2,\n  \"harshly\": -2,\n  \"hate\": -3,\n  \"hated\": -3,\n  \"hater\": -3,\n  \"haters\": -3,\n  \"hates\": -3,\n  \"hating\": -3,\n  \"hatred\": -3,\n  \"haunt\": -1,\n  \"haunted\": -2,\n  \"haunting\": 1,\n  \"haunts\": -1,\n  \"havoc\": -2,\n  \"hazardous\": -3,\n  \"headache\": -2,\n  \"healthy\": 2,\n  \"heartbreaking\": -3,\n  \"heartbroken\": -3,\n  \"heartfelt\": 3,\n  \"heartless\": -2,\n  \"heartwarming\": 3,\n  \"heaven\": 2,\n  \"heavenly\": 4,\n  \"heavyhearted\": -2,\n  \"hehe\": 2,\n  \"hell\": -4,\n  \"hellish\": -2,\n  \"help\": 2,\n  \"helpful\": 2,\n  \"helping\": 2,\n  \"helpless\": -2,\n  \"helps\": 2,\n  \"hero\": 2,\n  \"heroes\": 2,\n  \"heroic\": 3,\n  \"hesitant\": -2,\n  \"hesitate\": -2,\n  \"hid\": -1,\n  \"hide\": -1,\n  \"hideous\": -3,\n  \"hides\": -1,\n  \"hiding\": -1,\n  \"highlight\": 2,\n  \"hilarious\": 2,\n  \"hinder\": -2,\n  \"hindrance\": -2,\n  \"hoax\": -2,\n  \"hollow\": -1,\n  \"homeless\": -2,\n  \"homesick\": -2,\n  \"homicide\": -2,\n  \"homicides\": -2,\n  \"honest\": 2,\n  \"honor\": 2,\n  \"honored\": 2,\n  \"honoring\": 2,\n  \"honour\": 2,\n  \"honoured\": 2,\n  \"honouring\": 2,\n  \"hooligan\": -2,\n  \"hooliganism\": -2,\n  \"hooligans\": -2,\n  \"hope\": 2,\n  \"hopeful\": 2,\n  \"hopefully\": 2,\n  \"hopeless\": -2,\n  \"hopelessness\": -2,\n  \"hopes\": 2,\n  \"hoping\": 2,\n  \"horrendous\": -3,\n  \"horrid\": -3,\n  \"horrible\": -3,\n  \"horrific\": -3,\n  \"horrified\": -3,\n  \"hospitalized\": -2,\n  \"hostile\": -2,\n  \"huckster\": -2,\n  \"hug\": 2,\n  \"huge\": 1,\n  \"hugs\": 2,\n  \"humane\": 2,\n  \"humble\": 1,\n  \"humbug\": -2,\n  \"humerous\": 3,\n  \"humiliated\": -3,\n  \"humiliation\": -3,\n  \"humor\": 2,\n  \"humorous\": 2,\n  \"humour\": 2,\n  \"humourous\": 2,\n  \"hunger\": -2,\n  \"hurrah\": 5,\n  \"hurt\": -2,\n  \"hurting\": -2,\n  \"hurts\": -2,\n  \"hypocritical\": -2,\n  \"hysteria\": -3,\n  \"hysterical\": -3,\n  \"hysterics\": -3,\n  \"icky\": -3,\n  \"idiocy\": -3,\n  \"idiot\": -3,\n  \"idiotic\": -3,\n  \"ignorance\": -2,\n  \"ignorant\": -2,\n  \"ignore\": -1,\n  \"ignored\": -2,\n  \"ignores\": -1,\n  \"ill\": -2,\n  \"ill-fated\": -2,\n  \"illegal\": -3,\n  \"illegally\": -3,\n  \"illegitimate\": -3,\n  \"illiteracy\": -2,\n  \"illness\": -2,\n  \"illnesses\": -2,\n  \"illogical\": -2,\n  \"imaginative\": 2,\n  \"imbecile\": -3,\n  \"immobilized\": -1,\n  \"immortal\": 2,\n  \"immune\": 1,\n  \"impair\": -2,\n  \"impaired\": -2,\n  \"impairing\": -2,\n  \"impairment\": -2,\n  \"impairs\": -2,\n  \"impatient\": -2,\n  \"impeachment\": -3,\n  \"impeachments\": -3,\n  \"impede\": -2,\n  \"impeded\": -2,\n  \"impedes\": -2,\n  \"impeding\": -2,\n  \"impedingly\": -2,\n  \"imperfect\": -2,\n  \"importance\": 2,\n  \"important\": 2,\n  \"impose\": -1,\n  \"imposed\": -1,\n  \"imposes\": -1,\n  \"imposing\": -1,\n  \"imposter\": -2,\n  \"impotent\": -2,\n  \"impress\": 3,\n  \"impressed\": 3,\n  \"impresses\": 3,\n  \"impressive\": 3,\n  \"imprisoned\": -2,\n  \"imprisonment\": -2,\n  \"improper\": -2,\n  \"improperly\": -2,\n  \"improve\": 2,\n  \"improved\": 2,\n  \"improvement\": 2,\n  \"improves\": 2,\n  \"improving\": 2,\n  \"inability\": -2,\n  \"inaction\": -2,\n  \"inadequate\": -2,\n  \"inadvertently\": -2,\n  \"inappropriate\": -2,\n  \"incapable\": -2,\n  \"incapacitated\": -2,\n  \"incapacitates\": -2,\n  \"incapacitating\": -2,\n  \"incense\": -2,\n  \"incensed\": -2,\n  \"incenses\": -2,\n  \"incensing\": -2,\n  \"incoherent\": -2,\n  \"incompetence\": -2,\n  \"incompetent\": -2,\n  \"incomplete\": -1,\n  \"incomprehensible\": -2,\n  \"inconsiderate\": -2,\n  \"inconvenience\": -2,\n  \"inconvenient\": -2,\n  \"increase\": 1,\n  \"increased\": 1,\n  \"indecisive\": -2,\n  \"indestructible\": 2,\n  \"indicted\": -2,\n  \"indifference\": -2,\n  \"indifferent\": -2,\n  \"indignant\": -2,\n  \"indignation\": -2,\n  \"indoctrinate\": -2,\n  \"indoctrinated\": -2,\n  \"indoctrinates\": -2,\n  \"indoctrinating\": -2,\n  \"inediable\": -2,\n  \"inexorable\": -3,\n  \"inexcusable\": -3,\n  \"ineffective\": -2,\n  \"ineffectively\": -2,\n  \"ineffectual\": -2,\n  \"inefficiency\": -2,\n  \"inefficient\": -2,\n  \"inefficiently\": -2,\n  \"inept\": -2,\n  \"ineptitude\": -2,\n  \"infantile\": -2,\n  \"infantilized\": -2,\n  \"infatuated\": 2,\n  \"infatuation\": 2,\n  \"infect\": -2,\n  \"infected\": -2,\n  \"infecting\": -2,\n  \"infection\": -2,\n  \"infections\": -2,\n  \"infectious\": -2,\n  \"infects\": -2,\n  \"inferior\": -2,\n  \"infest\": -2,\n  \"infested\": -2,\n  \"infesting\": -2,\n  \"infests\": -2,\n  \"inflamed\": -2,\n  \"inflict\": -2,\n  \"inflicted\": -2,\n  \"inflicting\": -2,\n  \"inflicts\": -2,\n  \"influential\": 2,\n  \"infract\": -2,\n  \"infracted\": -2,\n  \"infracting\": -2,\n  \"infracts\": -2,\n  \"infringement\": -2,\n  \"infuriate\": -2,\n  \"infuriated\": -2,\n  \"infuriates\": -2,\n  \"infuriating\": -2,\n  \"inhibit\": -1,\n  \"inhuman\": -2,\n  \"injured\": -2,\n  \"injuries\": -2,\n  \"injury\": -2,\n  \"injustice\": -2,\n  \"innovate\": 1,\n  \"innovates\": 1,\n  \"innovation\": 1,\n  \"innovative\": 2,\n  \"inoperative\": -2,\n  \"inquisition\": -2,\n  \"inquisitive\": 2,\n  \"insane\": -2,\n  \"insanity\": -2,\n  \"insecure\": -2,\n  \"insensitive\": -2,\n  \"insensitivity\": -2,\n  \"insignificant\": -2,\n  \"insipid\": -2,\n  \"insolvent\": -2,\n  \"insomnia\": -2,\n  \"inspiration\": 2,\n  \"inspirational\": 2,\n  \"inspire\": 2,\n  \"inspired\": 2,\n  \"inspires\": 2,\n  \"inspiring\": 3,\n  \"insufficiency\": -2,\n  \"insufficient\": -2,\n  \"insufficiently\": -2,\n  \"insult\": -2,\n  \"insulted\": -2,\n  \"insulting\": -2,\n  \"insults\": -2,\n  \"intact\": 2,\n  \"integrity\": 2,\n  \"intelligent\": 2,\n  \"intense\": 1,\n  \"interest\": 1,\n  \"interested\": 2,\n  \"interesting\": 2,\n  \"interests\": 1,\n  \"interrogated\": -2,\n  \"interrupt\": -2,\n  \"interrupted\": -2,\n  \"interrupting\": -2,\n  \"interruption\": -2,\n  \"interrupts\": -2,\n  \"intimacy\": 2,\n  \"intimidate\": -2,\n  \"intimidated\": -2,\n  \"intimidates\": -2,\n  \"intimidating\": -2,\n  \"intimidation\": -2,\n  \"intransigence\": -2,\n  \"intransigency\": -2,\n  \"intricate\": 2,\n  \"intrigues\": 1,\n  \"invasion\": -1,\n  \"invincible\": 2,\n  \"invite\": 1,\n  \"inviting\": 1,\n  \"invulnerable\": 2,\n  \"irate\": -3,\n  \"ironic\": -1,\n  \"irony\": -1,\n  \"irrational\": -1,\n  \"irreparable\": -2,\n  \"irreproducible\": -2,\n  \"irresistible\": 2,\n  \"irresistibly\": 2,\n  \"irresolute\": -2,\n  \"irresponsible\": -2,\n  \"irresponsibly\": -2,\n  \"irreversible\": -1,\n  \"irreversibly\": -1,\n  \"irritate\": -3,\n  \"irritated\": -3,\n  \"irritates\": -3,\n  \"irritating\": -3,\n  \"isolated\": -1,\n  \"itchy\": -2,\n  \"jackass\": -4,\n  \"jackasses\": -4,\n  \"jailed\": -2,\n  \"jaunty\": 2,\n  \"jealous\": -2,\n  \"jealousy\": -2,\n  \"jeopardy\": -2,\n  \"jerk\": -3,\n  \"jesus\": 1,\n  \"jewel\": 1,\n  \"jewels\": 1,\n  \"jocular\": 2,\n  \"join\": 1,\n  \"joke\": 2,\n  \"jokes\": 2,\n  \"jolly\": 2,\n  \"jovial\": 2,\n  \"joy\": 3,\n  \"joyful\": 3,\n  \"joyfully\": 3,\n  \"joyless\": -2,\n  \"joyous\": 3,\n  \"jubilant\": 3,\n  \"jumpy\": -1,\n  \"justice\": 2,\n  \"justifiably\": 2,\n  \"justified\": 2,\n  \"keen\": 1,\n  \"kickback\": -3,\n  \"kickbacks\": -3,\n  \"kidnap\": -2,\n  \"kidnapped\": -2,\n  \"kidnapping\": -2,\n  \"kidnappings\": -2,\n  \"kidnaps\": -2,\n  \"kill\": -3,\n  \"killed\": -3,\n  \"killing\": -3,\n  \"kills\": -3,\n  \"kind\": 2,\n  \"kind of\": 0,\n  \"kinder\": 2,\n  \"kindness\": 2,\n  \"kiss\": 2,\n  \"kudos\": 3,\n  \"lack\": -2,\n  \"lackadaisical\": -2,\n  \"lag\": -1,\n  \"lagged\": -2,\n  \"lagging\": -2,\n  \"lags\": -2,\n  \"lame\": -2,\n  \"landmark\": 2,\n  \"lapse\": -1,\n  \"lapsed\": -1,\n  \"laugh\": 1,\n  \"laughed\": 1,\n  \"laughing\": 1,\n  \"laughs\": 1,\n  \"laughting\": 1,\n  \"launched\": 1,\n  \"lawl\": 3,\n  \"lawsuit\": -2,\n  \"lawsuits\": -2,\n  \"lazy\": -1,\n  \"leadership\": 1,\n  \"leading\": 2,\n  \"leak\": -1,\n  \"leaked\": -1,\n  \"leave\": -1,\n  \"legal\": 1,\n  \"legally\": 1,\n  \"lenient\": 1,\n  \"lethal\": -2,\n  \"lethality\": -2,\n  \"lethargic\": -2,\n  \"lethargy\": -2,\n  \"liar\": -3,\n  \"liars\": -3,\n  \"libelous\": -2,\n  \"lied\": -2,\n  \"lifeless\": -1,\n  \"lifesaver\": 4,\n  \"lighthearted\": 1,\n  \"likable\": 2,\n  \"like\": 2,\n  \"likeable\": 2,\n  \"liked\": 2,\n  \"likers\": 2,\n  \"likes\": 2,\n  \"liking\": 2,\n  \"limitation\": -1,\n  \"limited\": -1,\n  \"limits\": -1,\n  \"litigation\": -1,\n  \"litigious\": -2,\n  \"lively\": 2,\n  \"livid\": -2,\n  \"lmao\": 4,\n  \"lmfao\": 4,\n  \"loathe\": -3,\n  \"loathed\": -3,\n  \"loathes\": -3,\n  \"loathing\": -3,\n  \"loathsome\": -3,\n  \"lobbied\": -2,\n  \"lobby\": -2,\n  \"lobbying\": -2,\n  \"lobbyist\": -2,\n  \"lobbyists\": -2,\n  \"lol\": 3,\n  \"lolol\": 4,\n  \"lololol\": 4,\n  \"lolololol\": 4,\n  \"lonely\": -2,\n  \"lonesome\": -2,\n  \"longing\": -1,\n  \"lool\": 3,\n  \"loom\": -1,\n  \"loomed\": -1,\n  \"looming\": -1,\n  \"looms\": -1,\n  \"loool\": 3,\n  \"looool\": 3,\n  \"loose\": -3,\n  \"looses\": -3,\n  \"loser\": -3,\n  \"losing\": -3,\n  \"loss\": -3,\n  \"losses\": -3,\n  \"lost\": -3,\n  \"lousy\": -2,\n  \"lovable\": 3,\n  \"love\": 3,\n  \"loved\": 3,\n  \"lovelies\": 3,\n  \"lovely\": 3,\n  \"loves\": 3,\n  \"loving\": 2,\n  \"loving-kindness\": 3,\n  \"lowest\": -1,\n  \"loyal\": 3,\n  \"loyalty\": 3,\n  \"luck\": 3,\n  \"luckily\": 3,\n  \"lucky\": 3,\n  \"lucrative\": 3,\n  \"ludicrous\": -3,\n  \"lugubrious\": -2,\n  \"lunatic\": -3,\n  \"lunatics\": -3,\n  \"lurk\": -1,\n  \"lurking\": -1,\n  \"lurks\": -1,\n  \"luxury\": 2,\n  \"macabre\": -2,\n  \"mad\": -3,\n  \"maddening\": -3,\n  \"made-up\": -1,\n  \"madly\": -3,\n  \"madness\": -3,\n  \"magnificent\": 3,\n  \"maladaption\": -2,\n  \"maldevelopment\": -2,\n  \"maltreatment\": -2,\n  \"mandatory\": -1,\n  \"manipulated\": -1,\n  \"manipulating\": -1,\n  \"manipulation\": -1,\n  \"manslaughter\": -3,\n  \"marvel\": 3,\n  \"marvelous\": 3,\n  \"marvels\": 3,\n  \"masterpiece\": 4,\n  \"masterpieces\": 4,\n  \"matter\": 1,\n  \"matters\": 1,\n  \"mature\": 2,\n  \"meaningful\": 2,\n  \"meaningless\": -2,\n  \"medal\": 3,\n  \"mediocrity\": -3,\n  \"meditative\": 1,\n  \"melancholy\": -2,\n  \"memorable\": 1,\n  \"memoriam\": -2,\n  \"menace\": -2,\n  \"menaced\": -2,\n  \"menaces\": -2,\n  \"mercy\": 2,\n  \"merry\": 3,\n  \"mesmerizing\": 3,\n  \"mess\": -2,\n  \"messed\": -2,\n  \"messing up\": -2,\n  \"methodical\": 2,\n  \"methodically\": 2,\n  \"mindless\": -2,\n  \"miracle\": 4,\n  \"mirth\": 3,\n  \"mirthful\": 3,\n  \"mirthfully\": 3,\n  \"misbehave\": -2,\n  \"misbehaved\": -2,\n  \"misbehaves\": -2,\n  \"misbehaving\": -2,\n  \"misbranding\": -3,\n  \"miscast\": -2,\n  \"mischief\": -1,\n  \"mischiefs\": -1,\n  \"misclassified\": -2,\n  \"misclassifies\": -2,\n  \"misclassify\": -2,\n  \"misconduct\": -2,\n  \"misconducted\": -2,\n  \"misconducting\": -2,\n  \"misconducts\": -2,\n  \"miserable\": -3,\n  \"miserably\": -3,\n  \"misery\": -2,\n  \"misfire\": -2,\n  \"misfortune\": -2,\n  \"misgiving\": -2,\n  \"misinformation\": -2,\n  \"misinformed\": -2,\n  \"misinterpreted\": -2,\n  \"mislead\": -3,\n  \"misleaded\": -3,\n  \"misleading\": -3,\n  \"misleads\": -3,\n  \"misplace\": -2,\n  \"misplaced\": -2,\n  \"misplaces\": -2,\n  \"misplacing\": -2,\n  \"mispricing\": -3,\n  \"misread\": -1,\n  \"misreport\": -2,\n  \"misreported\": -2,\n  \"misreporting\": -2,\n  \"misreports\": -2,\n  \"misrepresent\": -2,\n  \"misrepresentation\": -2,\n  \"misrepresentations\": -2,\n  \"misrepresented\": -2,\n  \"misrepresenting\": -2,\n  \"misrepresents\": -2,\n  \"miss\": -2,\n  \"missed\": -2,\n  \"missing\": -2,\n  \"mistake\": -2,\n  \"mistaken\": -2,\n  \"mistakes\": -2,\n  \"mistaking\": -2,\n  \"misunderstand\": -2,\n  \"misunderstanding\": -2,\n  \"misunderstands\": -2,\n  \"misunderstood\": -2,\n  \"misuse\": -2,\n  \"misused\": -2,\n  \"misuses\": -2,\n  \"misusing\": -2,\n  \"moan\": -2,\n  \"moaned\": -2,\n  \"moaning\": -2,\n  \"moans\": -2,\n  \"mock\": -2,\n  \"mocked\": -2,\n  \"mocking\": -2,\n  \"mocks\": -2,\n  \"modernize\": 2,\n  \"modernized\": 2,\n  \"modernizes\": 2,\n  \"modernizing\": 2,\n  \"mongering\": -2,\n  \"monopolize\": -2,\n  \"monopolized\": -2,\n  \"monopolizes\": -2,\n  \"monopolizing\": -2,\n  \"monotone\": -1,\n  \"moody\": -1,\n  \"mope\": -1,\n  \"moping\": -1,\n  \"moron\": -3,\n  \"motherfucker\": -5,\n  \"motherfucking\": -5,\n  \"motivate\": 1,\n  \"motivated\": 2,\n  \"motivating\": 2,\n  \"motivation\": 1,\n  \"mourn\": -2,\n  \"mourned\": -2,\n  \"mournful\": -2,\n  \"mourning\": -2,\n  \"mourns\": -2,\n  \"muddy\": -2,\n  \"mumpish\": -2,\n  \"murder\": -2,\n  \"murderer\": -2,\n  \"murdering\": -3,\n  \"murderous\": -3,\n  \"murders\": -2,\n  \"murky\": -2,\n  \"myth\": -1,\n  \"n00b\": -2,\n  \"naive\": -2,\n  \"narcissism\": -2,\n  \"nasty\": -3,\n  \"natural\": 1,\n  \"na\u00EFve\": -2,\n  \"needy\": -2,\n  \"negative\": -2,\n  \"negativity\": -2,\n  \"neglect\": -2,\n  \"neglected\": -2,\n  \"neglecting\": -2,\n  \"neglects\": -2,\n  \"nerves\": -1,\n  \"nervous\": -2,\n  \"nervously\": -2,\n  \"nice\": 3,\n  \"nifty\": 2,\n  \"niggas\": -5,\n  \"nigger\": -5,\n  \"no\": -1,\n  \"no fun\": -3,\n  \"noble\": 2,\n  \"noblest\": 2,\n  \"noisy\": -1,\n  \"non-approved\": -2,\n  \"nonsense\": -2,\n  \"noob\": -2,\n  \"nosey\": -2,\n  \"not good\": -2,\n  \"not working\": -3,\n  \"notable\": 2,\n  \"noticeable\": 2,\n  \"notorious\": -2,\n  \"novel\": 2,\n  \"numb\": -1,\n  \"nurturing\": 2,\n  \"nuts\": -3,\n  \"obliterate\": -2,\n  \"obliterated\": -2,\n  \"obnoxious\": -3,\n  \"obscene\": -2,\n  \"obscenity\": -2,\n  \"obsessed\": 2,\n  \"obsolete\": -2,\n  \"obstacle\": -2,\n  \"obstacles\": -2,\n  \"obstinate\": -2,\n  \"obstruct\": -2,\n  \"obstructed\": -2,\n  \"obstructing\": -2,\n  \"obstruction\": -2,\n  \"obstructs\": -2,\n  \"odd\": -2,\n  \"offence\": -2,\n  \"offences\": -2,\n  \"offend\": -2,\n  \"offended\": -2,\n  \"offender\": -2,\n  \"offending\": -2,\n  \"offends\": -2,\n  \"offense\": -2,\n  \"offenses\": -2,\n  \"offensive\": -2,\n  \"offensively\": -2,\n  \"offline\": -1,\n  \"oks\": 2,\n  \"ominous\": 3,\n  \"once-in-a-lifetime\": 3,\n  \"oops\": -2,\n  \"opportunities\": 2,\n  \"opportunity\": 2,\n  \"oppressed\": -2,\n  \"oppression\": -2,\n  \"oppressions\": -2,\n  \"oppressive\": -2,\n  \"optimism\": 2,\n  \"optimistic\": 2,\n  \"optionless\": -2,\n  \"ostracize\": -2,\n  \"ostracized\": -2,\n  \"ostracizes\": -2,\n  \"ouch\": -2,\n  \"outage\": -2,\n  \"outages\": -2,\n  \"outbreak\": -2,\n  \"outbreaks\": -2,\n  \"outcry\": -2,\n  \"outmaneuvered\": -2,\n  \"outnumbered\": -2,\n  \"outrage\": -3,\n  \"outraged\": -3,\n  \"outrageous\": -3,\n  \"outreach\": 2,\n  \"outstanding\": 5,\n  \"overjoyed\": 4,\n  \"overload\": -1,\n  \"overlooked\": -1,\n  \"overprotective\": -2,\n  \"overran\": -2,\n  \"overreact\": -2,\n  \"overreacted\": -2,\n  \"overreacting\": -2,\n  \"overreaction\": -2,\n  \"overreacts\": -2,\n  \"oversell\": -2,\n  \"overselling\": -2,\n  \"oversells\": -2,\n  \"oversight\": -1,\n  \"oversimplification\": -2,\n  \"oversimplified\": -2,\n  \"oversimplifies\": -2,\n  \"oversimplify\": -2,\n  \"oversold\": -2,\n  \"overstatement\": -2,\n  \"overstatements\": -2,\n  \"overweight\": -1,\n  \"overwrought\": -3,\n  \"oxymoron\": -1,\n  \"pain\": -2,\n  \"pained\": -2,\n  \"painful\": -2,\n  \"panic\": -3,\n  \"panicked\": -3,\n  \"panics\": -3,\n  \"paradise\": 3,\n  \"paradox\": -1,\n  \"pardon\": 2,\n  \"pardoned\": 2,\n  \"pardoning\": 2,\n  \"pardons\": 2,\n  \"parley\": -1,\n  \"passion\": 1,\n  \"passionate\": 2,\n  \"passive\": -1,\n  \"passively\": -1,\n  \"pathetic\": -2,\n  \"pay\": -1,\n  \"peace\": 2,\n  \"peaceful\": 2,\n  \"peacefully\": 2,\n  \"penalize\": -2,\n  \"penalized\": -2,\n  \"penalizes\": -2,\n  \"penalizing\": -2,\n  \"penalty\": -2,\n  \"pensive\": -1,\n  \"perfect\": 3,\n  \"perfected\": 2,\n  \"perfection\": 3,\n  \"perfectly\": 3,\n  \"perfects\": 2,\n  \"peril\": -2,\n  \"perjury\": -3,\n  \"perpetrated\": -2,\n  \"perpetrator\": -2,\n  \"perpetrators\": -2,\n  \"perplexed\": -2,\n  \"persecute\": -2,\n  \"persecuted\": -2,\n  \"persecutes\": -2,\n  \"persecuting\": -2,\n  \"perturbed\": -2,\n  \"pervert\": -3,\n  \"pesky\": -2,\n  \"pessimism\": -2,\n  \"pessimistic\": -2,\n  \"petrified\": -2,\n  \"philanthropy\": 2,\n  \"phobic\": -2,\n  \"picturesque\": 2,\n  \"pileup\": -1,\n  \"pillage\": -2,\n  \"pique\": -2,\n  \"piqued\": -2,\n  \"piss\": -4,\n  \"pissed\": -4,\n  \"pissing\": -3,\n  \"piteous\": -2,\n  \"pitied\": -1,\n  \"pity\": -2,\n  \"plague\": -3,\n  \"plagued\": -3,\n  \"plagues\": -3,\n  \"plaguing\": -3,\n  \"playful\": 2,\n  \"pleasant\": 3,\n  \"please\": 1,\n  \"pleased\": 3,\n  \"pleasurable\": 3,\n  \"pleasure\": 3,\n  \"plodding\": -2,\n  \"poignant\": 2,\n  \"pointless\": -2,\n  \"poised\": -2,\n  \"poison\": -2,\n  \"poisoned\": -2,\n  \"poisons\": -2,\n  \"polished\": 2,\n  \"polite\": 2,\n  \"politeness\": 2,\n  \"pollutant\": -2,\n  \"pollute\": -2,\n  \"polluted\": -2,\n  \"polluter\": -2,\n  \"polluters\": -2,\n  \"pollutes\": -2,\n  \"pollution\": -2,\n  \"poor\": -2,\n  \"poorer\": -2,\n  \"poorest\": -2,\n  \"poorly\": -2,\n  \"popular\": 3,\n  \"popularity\": 3,\n  \"positive\": 2,\n  \"positively\": 2,\n  \"possessive\": -2,\n  \"post-traumatic\": -2,\n  \"postpone\": -1,\n  \"postponed\": -1,\n  \"postpones\": -1,\n  \"postponing\": -1,\n  \"poverty\": -1,\n  \"powerful\": 2,\n  \"powerless\": -2,\n  \"praise\": 3,\n  \"praised\": 3,\n  \"praises\": 3,\n  \"praising\": 3,\n  \"pray\": 1,\n  \"praying\": 1,\n  \"prays\": 1,\n  \"prblm\": -2,\n  \"prblms\": -2,\n  \"predatory\": -2,\n  \"prepared\": 1,\n  \"pressure\": -1,\n  \"pressured\": -2,\n  \"pretend\": -1,\n  \"pretending\": -1,\n  \"pretends\": -1,\n  \"pretty\": 1,\n  \"prevent\": -1,\n  \"prevented\": -1,\n  \"preventing\": -1,\n  \"prevents\": -1,\n  \"prick\": -5,\n  \"prison\": -2,\n  \"prisoner\": -2,\n  \"prisoners\": -2,\n  \"privileged\": 2,\n  \"proactive\": 2,\n  \"problem\": -2,\n  \"problems\": -2,\n  \"profit\": 2,\n  \"profitable\": 2,\n  \"profiteer\": -2,\n  \"profits\": 2,\n  \"progress\": 2,\n  \"prohibit\": -1,\n  \"prohibits\": -1,\n  \"prominent\": 2,\n  \"promise\": 1,\n  \"promised\": 1,\n  \"promises\": 1,\n  \"promote\": 1,\n  \"promoted\": 1,\n  \"promotes\": 1,\n  \"promoting\": 1,\n  \"promptly\": 1,\n  \"propaganda\": -2,\n  \"prosecute\": -1,\n  \"prosecuted\": -2,\n  \"prosecutes\": -1,\n  \"prosecution\": -1,\n  \"prospect\": 1,\n  \"prospects\": 1,\n  \"prosperity\": 3,\n  \"prosperous\": 3,\n  \"protect\": 1,\n  \"protected\": 1,\n  \"protects\": 1,\n  \"protest\": -2,\n  \"protesters\": -2,\n  \"protesting\": -2,\n  \"protests\": -2,\n  \"proud\": 2,\n  \"proudly\": 2,\n  \"provoke\": -1,\n  \"provoked\": -1,\n  \"provokes\": -1,\n  \"provoking\": -1,\n  \"prudence\": 2,\n  \"pseudoscience\": -3,\n  \"psychopathic\": -2,\n  \"punish\": -2,\n  \"punished\": -2,\n  \"punishes\": -2,\n  \"punishing\": -2,\n  \"punitive\": -2,\n  \"pure\": 1,\n  \"purest\": 1,\n  \"purposeful\": 2,\n  \"pushy\": -1,\n  \"puzzled\": -2,\n  \"quaking\": -2,\n  \"qualities\": 2,\n  \"quality\": 2,\n  \"questionable\": -2,\n  \"questioned\": -1,\n  \"questioning\": -1,\n  \"racism\": -3,\n  \"racist\": -3,\n  \"racists\": -3,\n  \"rage\": -2,\n  \"rageful\": -2,\n  \"rainy\": -1,\n  \"rant\": -3,\n  \"ranter\": -3,\n  \"ranters\": -3,\n  \"rants\": -3,\n  \"rape\": -4,\n  \"raped\": -4,\n  \"rapist\": -4,\n  \"rapture\": 2,\n  \"raptured\": 2,\n  \"raptures\": 2,\n  \"rapturous\": 4,\n  \"rash\": -2,\n  \"ratified\": 2,\n  \"reach\": 1,\n  \"reached\": 1,\n  \"reaches\": 1,\n  \"reaching\": 1,\n  \"reassure\": 1,\n  \"reassured\": 1,\n  \"reassures\": 1,\n  \"reassuring\": 2,\n  \"rebel\": -2,\n  \"rebellion\": -2,\n  \"rebels\": -2,\n  \"recession\": -2,\n  \"reckless\": -2,\n  \"recognition\": 2,\n  \"recommend\": 2,\n  \"recommended\": 2,\n  \"recommends\": 2,\n  \"redeemed\": 2,\n  \"refine\": 1,\n  \"refined\": 1,\n  \"refines\": 1,\n  \"refreshingly\": 2,\n  \"refuse\": -2,\n  \"refused\": -2,\n  \"refuses\": -2,\n  \"refusing\": -2,\n  \"regret\": -2,\n  \"regretful\": -2,\n  \"regrets\": -2,\n  \"regretted\": -2,\n  \"regretting\": -2,\n  \"reigning\": 1,\n  \"reject\": -1,\n  \"rejected\": -1,\n  \"rejecting\": -1,\n  \"rejection\": -2,\n  \"rejects\": -1,\n  \"rejoice\": 4,\n  \"rejoiced\": 4,\n  \"rejoices\": 4,\n  \"rejoicing\": 4,\n  \"relaxed\": 2,\n  \"relentless\": -1,\n  \"reliability\": 2,\n  \"reliable\": 2,\n  \"reliably\": 2,\n  \"reliant\": 2,\n  \"relieve\": 1,\n  \"relieved\": 2,\n  \"relieves\": 1,\n  \"relieving\": 2,\n  \"relishing\": 2,\n  \"remarkable\": 2,\n  \"remorse\": -2,\n  \"repellent\": -2,\n  \"repercussion\": -2,\n  \"repercussions\": -2,\n  \"reprimand\": -2,\n  \"reprimanded\": -2,\n  \"reprimanding\": -2,\n  \"reprimands\": -2,\n  \"repulse\": -1,\n  \"repulsed\": -2,\n  \"repulsive\": -2,\n  \"rescue\": 2,\n  \"rescued\": 2,\n  \"rescues\": 2,\n  \"resentful\": -2,\n  \"resign\": -1,\n  \"resigned\": -1,\n  \"resigning\": -1,\n  \"resigns\": -1,\n  \"resolute\": 2,\n  \"resolution\": 2,\n  \"resolve\": 2,\n  \"resolved\": 2,\n  \"resolves\": 2,\n  \"resolving\": 2,\n  \"respect\": 2,\n  \"respected\": 2,\n  \"respects\": 2,\n  \"responsibility\": 1,\n  \"responsible\": 2,\n  \"responsive\": 2,\n  \"restful\": 2,\n  \"restless\": -2,\n  \"restore\": 1,\n  \"restored\": 1,\n  \"restores\": 1,\n  \"restoring\": 1,\n  \"restrict\": -2,\n  \"restricted\": -2,\n  \"restricting\": -2,\n  \"restriction\": -2,\n  \"restrictive\": -1,\n  \"restricts\": -2,\n  \"retained\": -1,\n  \"retard\": -2,\n  \"retarded\": -2,\n  \"retreat\": -1,\n  \"revenge\": -2,\n  \"revengeful\": -2,\n  \"revered\": 2,\n  \"revive\": 2,\n  \"revives\": 2,\n  \"revolting\": -2,\n  \"reward\": 2,\n  \"rewarded\": 2,\n  \"rewarding\": 2,\n  \"rewards\": 2,\n  \"rich\": 2,\n  \"richly\": 2,\n  \"ridiculous\": -3,\n  \"rig\": -1,\n  \"rigged\": -1,\n  \"right direction\": 3,\n  \"righteousness\": 2,\n  \"rightful\": 2,\n  \"rightfully\": 2,\n  \"rigorous\": 3,\n  \"rigorously\": 3,\n  \"riot\": -2,\n  \"riots\": -2,\n  \"rise\": 1,\n  \"rises\": 1,\n  \"risk\": -2,\n  \"risks\": -2,\n  \"risky\": -2,\n  \"riveting\": 3,\n  \"rob\": -2,\n  \"robber\": -2,\n  \"robed\": -2,\n  \"robing\": -2,\n  \"robs\": -2,\n  \"robust\": 2,\n  \"rofl\": 4,\n  \"roflcopter\": 4,\n  \"roflmao\": 4,\n  \"romance\": 2,\n  \"romantical\": 2,\n  \"romantically\": 2,\n  \"rose\": 1,\n  \"rotfl\": 4,\n  \"rotflmfao\": 4,\n  \"rotflol\": 4,\n  \"rotten\": -3,\n  \"rude\": -2,\n  \"ruin\": -2,\n  \"ruined\": -2,\n  \"ruining\": -2,\n  \"ruins\": -2,\n  \"sabotage\": -2,\n  \"sad\": -2,\n  \"sadden\": -2,\n  \"saddened\": -2,\n  \"sadly\": -2,\n  \"safe\": 1,\n  \"safely\": 1,\n  \"safer\": 2,\n  \"safety\": 1,\n  \"salient\": 1,\n  \"salute\": 2,\n  \"saluted\": 2,\n  \"salutes\": 2,\n  \"saluting\": 2,\n  \"salvation\": 2,\n  \"sappy\": -1,\n  \"sarcastic\": -2,\n  \"satisfied\": 2,\n  \"savange\": -2,\n  \"savanges\": -2,\n  \"save\": 2,\n  \"saved\": 2,\n  \"savings\": 1,\n  \"scam\": -2,\n  \"scams\": -2,\n  \"scandal\": -3,\n  \"scandalous\": -3,\n  \"scandals\": -3,\n  \"scapegoat\": -2,\n  \"scapegoats\": -2,\n  \"scare\": -2,\n  \"scared\": -2,\n  \"scar\": -2,\n  \"scars\": -2,\n  \"scary\": -2,\n  \"sceptical\": -2,\n  \"scold\": -2,\n  \"scoop\": 3,\n  \"scorn\": -2,\n  \"scornful\": -2,\n  \"scream\": -2,\n  \"screamed\": -2,\n  \"screaming\": -2,\n  \"screams\": -2,\n  \"screwed\": -2,\n  \"screwed up\": -3,\n  \"scum\": -3,\n  \"scumbag\": -4,\n  \"seamless\": 2,\n  \"seamlessly\": 2,\n  \"secure\": 2,\n  \"secured\": 2,\n  \"secures\": 2,\n  \"sedition\": -2,\n  \"seditious\": -2,\n  \"seduced\": -1,\n  \"self-abuse\": -2,\n  \"self-confident\": 2,\n  \"self-contradictory\": -2,\n  \"self-deluded\": -2,\n  \"selfish\": -3,\n  \"selfishness\": -3,\n  \"sentence\": -2,\n  \"sentenced\": -2,\n  \"sentences\": -2,\n  \"sentencing\": -2,\n  \"serene\": 2,\n  \"settlement\": 1,\n  \"settlements\": 1,\n  \"severe\": -2,\n  \"severely\": -2,\n  \"sexist\": -2,\n  \"sexistic\": -2,\n  \"sexy\": 3,\n  \"shaky\": -2,\n  \"shame\": -2,\n  \"shamed\": -2,\n  \"shameful\": -2,\n  \"share\": 1,\n  \"shared\": 1,\n  \"shares\": 1,\n  \"shattered\": -2,\n  \"shit\": -4,\n  \"shithead\": -4,\n  \"shitty\": -3,\n  \"shock\": -2,\n  \"shocked\": -2,\n  \"shocking\": -2,\n  \"shocks\": -2,\n  \"shoody\": -2,\n  \"shoot\": -1,\n  \"short-sighted\": -2,\n  \"short-sightedness\": -2,\n  \"shortage\": -2,\n  \"shortages\": -2,\n  \"shrew\": -4,\n  \"shy\": -1,\n  \"sick\": -2,\n  \"sickness\": -2,\n  \"side-effect\": -2,\n  \"side-effects\": -2,\n  \"sigh\": -2,\n  \"significance\": 1,\n  \"significant\": 1,\n  \"silencing\": -1,\n  \"silly\": -1,\n  \"simplicity\": 1,\n  \"sin\": -2,\n  \"sincere\": 2,\n  \"sincerely\": 2,\n  \"sincerest\": 2,\n  \"sincerity\": 2,\n  \"sinful\": -3,\n  \"singleminded\": -2,\n  \"sinister\": -2,\n  \"sins\": -2,\n  \"skeptic\": -2,\n  \"skeptical\": -2,\n  \"skepticism\": -2,\n  \"skeptics\": -2,\n  \"slam\": -2,\n  \"slash\": -2,\n  \"slashed\": -2,\n  \"slashes\": -2,\n  \"slashing\": -2,\n  \"slave\": -3,\n  \"slavery\": -3,\n  \"slaves\": -3,\n  \"sleeplessness\": -2,\n  \"slick\": 2,\n  \"slicker\": 2,\n  \"slickest\": 2,\n  \"slip\": -1,\n  \"sloppy\": -2,\n  \"sluggish\": -2,\n  \"slumping\": -1,\n  \"slut\": -5,\n  \"smart\": 1,\n  \"smarter\": 2,\n  \"smartest\": 2,\n  \"smear\": -2,\n  \"smile\": 2,\n  \"smiled\": 2,\n  \"smiles\": 2,\n  \"smiling\": 2,\n  \"smog\": -2,\n  \"smuggle\": -2,\n  \"smuggled\": -2,\n  \"smuggling\": -2,\n  \"smuggles\": -2,\n  \"sneaky\": -1,\n  \"sneeze\": -2,\n  \"sneezed\": -2,\n  \"sneezes\": -2,\n  \"sneezing\": -2,\n  \"snub\": -2,\n  \"snubbed\": -2,\n  \"snubbing\": -2,\n  \"snubs\": -2,\n  \"sobering\": 1,\n  \"solemn\": -1,\n  \"solid\": 2,\n  \"solidarity\": 2,\n  \"solidified\": 2,\n  \"solidifies\": 2,\n  \"solidify\": 2,\n  \"solidifying\": 2,\n  \"solution\": 1,\n  \"solutions\": 1,\n  \"solve\": 1,\n  \"solved\": 1,\n  \"solves\": 1,\n  \"solving\": 1,\n  \"somber\": -2,\n  \"some kind\": 0,\n  \"son-of-a-bitch\": -5,\n  \"soothe\": 3,\n  \"soothed\": 3,\n  \"soothing\": 3,\n  \"sophisticated\": 2,\n  \"sore\": -1,\n  \"sorrow\": -2,\n  \"sorrowful\": -2,\n  \"sorry\": -1,\n  \"spacious\": 1,\n  \"spam\": -2,\n  \"spammer\": -3,\n  \"spammers\": -3,\n  \"spamming\": -2,\n  \"spark\": 1,\n  \"sparkle\": 3,\n  \"sparkles\": 3,\n  \"sparkling\": 3,\n  \"spearhead\": 2,\n  \"speculative\": -2,\n  \"spirit\": 1,\n  \"spirited\": 2,\n  \"spiritless\": -2,\n  \"spiteful\": -2,\n  \"splendid\": 3,\n  \"spoiled\": -2,\n  \"spoilt\": -2,\n  \"spotless\": 2,\n  \"sprightly\": 2,\n  \"squander\": -2,\n  \"squandered\": -2,\n  \"squandering\": -2,\n  \"squanders\": -2,\n  \"squelched\": -1,\n  \"stab\": -2,\n  \"stabbed\": -2,\n  \"stable\": 2,\n  \"stabs\": -2,\n  \"stall\": -2,\n  \"stalled\": -2,\n  \"stalling\": -2,\n  \"stamina\": 2,\n  \"stampede\": -2,\n  \"stank\": -2,\n  \"startled\": -2,\n  \"startling\": 3,\n  \"starve\": -2,\n  \"starved\": -2,\n  \"starves\": -2,\n  \"starving\": -2,\n  \"steadfast\": 2,\n  \"steal\": -2,\n  \"stealing\": -2,\n  \"steals\": -2,\n  \"stereotype\": -2,\n  \"stereotyped\": -2,\n  \"stifled\": -1,\n  \"stimulate\": 1,\n  \"stimulated\": 1,\n  \"stimulates\": 1,\n  \"stimulating\": 2,\n  \"stingy\": -2,\n  \"stink\": -2,\n  \"stinked\": -2,\n  \"stinker\": -2,\n  \"stinking\": -2,\n  \"stinks\": -2,\n  \"stinky\": -2,\n  \"stole\": -2,\n  \"stolen\": -2,\n  \"stop\": -1,\n  \"stopped\": -1,\n  \"stopping\": -1,\n  \"stops\": -1,\n  \"stout\": 2,\n  \"straight\": 1,\n  \"strange\": -1,\n  \"strangely\": -1,\n  \"strangled\": -2,\n  \"strength\": 2,\n  \"strengthen\": 2,\n  \"strengthened\": 2,\n  \"strengthening\": 2,\n  \"strengthens\": 2,\n  \"strengths\": 2,\n  \"stress\": -1,\n  \"stressed\": -2,\n  \"stressor\": -2,\n  \"stressors\": -2,\n  \"stricken\": -2,\n  \"strike\": -1,\n  \"strikers\": -2,\n  \"strikes\": -1,\n  \"strong\": 2,\n  \"stronger\": 2,\n  \"strongest\": 2,\n  \"struck\": -1,\n  \"struggle\": -2,\n  \"struggled\": -2,\n  \"struggles\": -2,\n  \"struggling\": -2,\n  \"stubborn\": -2,\n  \"stuck\": -2,\n  \"stunned\": -2,\n  \"stunning\": 4,\n  \"stupid\": -2,\n  \"stupidity\": -3,\n  \"stupidly\": -2,\n  \"suave\": 2,\n  \"subpoena\": -2,\n  \"substantial\": 1,\n  \"substantially\": 1,\n  \"subversive\": -2,\n  \"succeed\": 3,\n  \"succeeded\": 3,\n  \"succeeding\": 3,\n  \"succeeds\": 3,\n  \"success\": 2,\n  \"successful\": 3,\n  \"successfully\": 3,\n  \"suck\": -3,\n  \"sucks\": -3,\n  \"sue\": -2,\n  \"sued\": -2,\n  \"sueing\": -2,\n  \"sues\": -2,\n  \"suffer\": -2,\n  \"suffered\": -2,\n  \"sufferer\": -2,\n  \"sufferers\": -2,\n  \"suffering\": -2,\n  \"suffers\": -2,\n  \"suicidal\": -2,\n  \"suicide\": -2,\n  \"suicides\": -2,\n  \"suing\": -2,\n  \"suitable\": 2,\n  \"suited\": 2,\n  \"sulking\": -2,\n  \"sulky\": -2,\n  \"sullen\": -2,\n  \"sunshine\": 2,\n  \"super\": 3,\n  \"superb\": 5,\n  \"superior\": 2,\n  \"support\": 2,\n  \"supported\": 2,\n  \"supporter\": 1,\n  \"supporters\": 1,\n  \"supporting\": 1,\n  \"supportive\": 2,\n  \"supports\": 2,\n  \"supreme\": 4,\n  \"survived\": 2,\n  \"surviving\": 2,\n  \"survivor\": 2,\n  \"suspect\": -1,\n  \"suspected\": -1,\n  \"suspecting\": -1,\n  \"suspects\": -1,\n  \"suspend\": -1,\n  \"suspended\": -1,\n  \"suspicious\": -2,\n  \"sustainability\": 1,\n  \"sustainable\": 2,\n  \"sustainably\": 2,\n  \"swear\": -2,\n  \"swearing\": -2,\n  \"swears\": -2,\n  \"sweet\": 2,\n  \"sweeter\": 3,\n  \"sweetest\": 3,\n  \"swift\": 2,\n  \"swiftly\": 2,\n  \"swindle\": -3,\n  \"swindles\": -3,\n  \"swindling\": -3,\n  \"sympathetic\": 2,\n  \"sympathy\": 2,\n  \"taint\": -2,\n  \"tainted\": -2,\n  \"talent\": 2,\n  \"tard\": -2,\n  \"tarnish\": -2,\n  \"tarnished\": -2,\n  \"tarnishes\": -2,\n  \"tears\": -2,\n  \"tender\": 2,\n  \"tenderness\": 2,\n  \"tense\": -2,\n  \"tension\": -1,\n  \"terrible\": -3,\n  \"terribly\": -3,\n  \"terrific\": 4,\n  \"terrifically\": 4,\n  \"terrified\": -3,\n  \"terror\": -3,\n  \"terrorist\": -2,\n  \"terrorists\": -2,\n  \"terrorize\": -3,\n  \"terrorized\": -3,\n  \"terrorizes\": -3,\n  \"thank\": 2,\n  \"thankful\": 2,\n  \"thanks\": 2,\n  \"thorny\": -2,\n  \"thoughtful\": 2,\n  \"thoughtless\": -2,\n  \"threat\": -2,\n  \"threaten\": -2,\n  \"threatened\": -2,\n  \"threatening\": -2,\n  \"threatens\": -2,\n  \"threats\": -2,\n  \"thrilled\": 5,\n  \"thwart\": -2,\n  \"thwarted\": -2,\n  \"thwarting\": -2,\n  \"thwarts\": -2,\n  \"timid\": -2,\n  \"timorous\": -2,\n  \"tired\": -2,\n  \"tits\": -2,\n  \"tolerance\": 2,\n  \"tolerant\": 2,\n  \"toothless\": -2,\n  \"top\": 2,\n  \"tops\": 2,\n  \"torn\": -2,\n  \"torture\": -4,\n  \"tortured\": -4,\n  \"tortures\": -4,\n  \"torturing\": -4,\n  \"totalitarian\": -2,\n  \"totalitarianism\": -2,\n  \"tout\": -2,\n  \"touted\": -2,\n  \"touting\": -2,\n  \"touts\": -2,\n  \"toxic\": -3,\n  \"tragedies\": -2,\n  \"tragedy\": -2,\n  \"tragic\": -2,\n  \"tranquil\": 2,\n  \"transgress\": -2,\n  \"transgressed\": -2,\n  \"transgresses\": -2,\n  \"transgressing\": -2,\n  \"trap\": -1,\n  \"trapped\": -2,\n  \"traps\": -1,\n  \"trauma\": -3,\n  \"traumatic\": -3,\n  \"travesty\": -2,\n  \"treason\": -3,\n  \"treasonous\": -3,\n  \"treasure\": 2,\n  \"treasures\": 2,\n  \"trembling\": -2,\n  \"tremor\": -2,\n  \"tremors\": -2,\n  \"tremulous\": -2,\n  \"tribulation\": -2,\n  \"tribute\": 2,\n  \"tricked\": -2,\n  \"trickery\": -2,\n  \"triumph\": 4,\n  \"triumphant\": 4,\n  \"troll\": -2,\n  \"trouble\": -2,\n  \"troubled\": -2,\n  \"troubles\": -2,\n  \"troubling\": -2,\n  \"true\": 2,\n  \"trust\": 1,\n  \"trusted\": 2,\n  \"trusts\": 1,\n  \"tumor\": -2,\n  \"twat\": -5,\n  \"tyran\": -3,\n  \"tyrannic\": -3,\n  \"tyrannical\": -3,\n  \"tyrannically\": -3,\n  \"tyrans\": -3,\n  \"ubiquitous\": 2,\n  \"ugh\": -2,\n  \"ugliness\": -3,\n  \"ugly\": -3,\n  \"unable\": -2,\n  \"unacceptable\": -2,\n  \"unappeasable\": -2,\n  \"unappreciated\": -2,\n  \"unapproved\": -2,\n  \"unattractive\": -2,\n  \"unavailable\": -1,\n  \"unavailing\": -2,\n  \"unaware\": -2,\n  \"unbearable\": -2,\n  \"unbelievable\": -1,\n  \"unbelieving\": -1,\n  \"unbiased\": 2,\n  \"uncertain\": -1,\n  \"unclear\": -1,\n  \"uncomfortable\": -2,\n  \"unconcerned\": -2,\n  \"unconfirmed\": -1,\n  \"unconvinced\": -1,\n  \"uncredited\": -1,\n  \"undecided\": -1,\n  \"undercooked\": -2,\n  \"underestimate\": -1,\n  \"underestimated\": -1,\n  \"underestimates\": -1,\n  \"underestimating\": -1,\n  \"undermine\": -2,\n  \"undermined\": -2,\n  \"undermines\": -2,\n  \"undermining\": -2,\n  \"underperform\": -2,\n  \"underperformed\": -2,\n  \"underperforming\": -2,\n  \"underperforms\": -2,\n  \"undeserving\": -2,\n  \"undesirable\": -2,\n  \"uneasy\": -2,\n  \"unemployed\": -1,\n  \"unemployment\": -2,\n  \"unequal\": -1,\n  \"unequaled\": 2,\n  \"unethical\": -2,\n  \"uneventful\": -2,\n  \"unfair\": -2,\n  \"unfavorable\": -2,\n  \"unfit\": -2,\n  \"unfitted\": -2,\n  \"unfocused\": -2,\n  \"unforgivable\": -3,\n  \"unforgiving\": -2,\n  \"unfulfilled\": -2,\n  \"unfunny\": -2,\n  \"ungenerous\": -2,\n  \"ungrateful\": -3,\n  \"unhappy\": -2,\n  \"unhappiness\": -2,\n  \"unhealthy\": -2,\n  \"unhygienic\": -2,\n  \"unified\": 1,\n  \"unimaginative\": -2,\n  \"unimpressed\": -2,\n  \"uninspired\": -2,\n  \"unintelligent\": -2,\n  \"unintentional\": -2,\n  \"uninvolving\": -2,\n  \"united\": 1,\n  \"unjust\": -2,\n  \"unlikely\": -1,\n  \"unlovable\": -2,\n  \"unloved\": -2,\n  \"unmatched\": 1,\n  \"unmotivated\": -2,\n  \"unoriginal\": -2,\n  \"unparliamentary\": -2,\n  \"unpleasant\": -2,\n  \"unpleasantness\": -2,\n  \"unprofessional\": -2,\n  \"unravel\": 1,\n  \"unreleting\": -2,\n  \"unresearched\": -2,\n  \"unsafe\": -2,\n  \"unsatisfied\": -2,\n  \"unscientific\": -2,\n  \"unsecured\": -2,\n  \"unselfish\": 2,\n  \"unsettled\": -1,\n  \"unsold\": -1,\n  \"unsophisticated\": -2,\n  \"unsound\": -2,\n  \"unstable\": -2,\n  \"unstoppable\": 2,\n  \"unsuccessful\": -2,\n  \"unsuccessfully\": -2,\n  \"unsupported\": -2,\n  \"unsure\": -1,\n  \"untarnished\": 2,\n  \"untrue\": -2,\n  \"unwanted\": -2,\n  \"unworthy\": -2,\n  \"uplifting\": 2,\n  \"uproar\": -3,\n  \"upset\": -2,\n  \"upsets\": -2,\n  \"upsetting\": -2,\n  \"uptight\": -2,\n  \"urgent\": -1,\n  \"useful\": 2,\n  \"usefulness\": 2,\n  \"useless\": -2,\n  \"uselessness\": -2,\n  \"vague\": -2,\n  \"validate\": 1,\n  \"validated\": 1,\n  \"validates\": 1,\n  \"validating\": 1,\n  \"vapid\": -2,\n  \"verdict\": -1,\n  \"verdicts\": -1,\n  \"vested\": 1,\n  \"vexation\": -2,\n  \"vexing\": -2,\n  \"vibrant\": 3,\n  \"vicious\": -2,\n  \"victim\": -3,\n  \"victimization\": -3,\n  \"victimize\": -3,\n  \"victimized\": -3,\n  \"victimizes\": -3,\n  \"victimizing\": -3,\n  \"victims\": -3,\n  \"victor\": 3,\n  \"victors\": 3,\n  \"victory\": 3,\n  \"victories\": 3,\n  \"vigilant\": 3,\n  \"vigor\": 3,\n  \"vile\": -3,\n  \"vindicate\": 2,\n  \"vindicated\": 2,\n  \"vindicates\": 2,\n  \"vindicating\": 2,\n  \"violate\": -2,\n  \"violated\": -2,\n  \"violates\": -2,\n  \"violating\": -2,\n  \"violation\": -2,\n  \"violations\": -2,\n  \"violence\": -3,\n  \"violence-related\": -3,\n  \"violent\": -3,\n  \"violently\": -3,\n  \"virtuous\": 2,\n  \"virulent\": -2,\n  \"vision\": 1,\n  \"visionary\": 3,\n  \"visioning\": 1,\n  \"visions\": 1,\n  \"vitality\": 3,\n  \"vitamin\": 1,\n  \"vitriolic\": -3,\n  \"vivacious\": 3,\n  \"vividly\": 2,\n  \"vociferous\": -1,\n  \"vomit\": -3,\n  \"vomited\": -3,\n  \"vomiting\": -3,\n  \"vomits\": -3,\n  \"vulnerability\": -2,\n  \"vulnerable\": -2,\n  \"walkout\": -2,\n  \"walkouts\": -2,\n  \"wanker\": -3,\n  \"want\": 1,\n  \"war\": -2,\n  \"warfare\": -2,\n  \"warm\": 1,\n  \"warmhearted\": 2,\n  \"warmness\": 2,\n  \"warmth\": 2,\n  \"warn\": -2,\n  \"warned\": -2,\n  \"warning\": -3,\n  \"warnings\": -3,\n  \"warns\": -2,\n  \"waste\": -1,\n  \"wasted\": -2,\n  \"wasting\": -2,\n  \"wavering\": -1,\n  \"weak\": -2,\n  \"weakened\": -2,\n  \"weakness\": -2,\n  \"weaknesses\": -2,\n  \"wealth\": 3,\n  \"wealthier\": 2,\n  \"wealthy\": 2,\n  \"weary\": -2,\n  \"weep\": -2,\n  \"weeping\": -2,\n  \"weird\": -2,\n  \"welcome\": 2,\n  \"welcomed\": 2,\n  \"welcomes\": 2,\n  \"well-being\": 2,\n  \"well-championed\": 3,\n  \"well-developed\": 2,\n  \"well-established\": 2,\n  \"well-focused\": 2,\n  \"well-groomed\": 2,\n  \"well-proportioned\": 2,\n  \"whimsical\": 1,\n  \"whitewash\": -3,\n  \"whore\": -4,\n  \"wicked\": -2,\n  \"widowed\": -1,\n  \"willingness\": 2,\n  \"win\": 4,\n  \"winner\": 4,\n  \"winning\": 4,\n  \"wins\": 4,\n  \"winwin\": 3,\n  \"wisdom\": 1,\n  \"wish\": 1,\n  \"wishes\": 1,\n  \"wishing\": 1,\n  \"withdrawal\": -3,\n  \"wits\": 2,\n  \"woebegone\": -2,\n  \"woeful\": -3,\n  \"won\": 3,\n  \"wonderful\": 4,\n  \"wonderfully\": 4,\n  \"woo\": 3,\n  \"woohoo\": 3,\n  \"wooo\": 4,\n  \"woow\": 4,\n  \"worn\": -1,\n  \"worried\": -3,\n  \"worries\": -3,\n  \"worry\": -3,\n  \"worrying\": -3,\n  \"worse\": -3,\n  \"worsen\": -3,\n  \"worsened\": -3,\n  \"worsening\": -3,\n  \"worsens\": -3,\n  \"worshiped\": 3,\n  \"worst\": -3,\n  \"worth\": 2,\n  \"worthless\": -2,\n  \"worthy\": 2,\n  \"wow\": 4,\n  \"wowow\": 4,\n  \"wowww\": 4,\n  \"wrathful\": -3,\n  \"wreck\": -2,\n  \"wrenching\": -2,\n  \"wrong\": -2,\n  \"wrongdoing\": -2,\n  \"wrongdoings\": -2,\n  \"wronged\": -2,\n  \"wrongful\": -2,\n  \"wrongfully\": -2,\n  \"wrongly\": -2,\n  \"wtf\": -4,\n  \"wtff\": -4,\n  \"wtfff\": -4,\n  \"xo\": 3,\n  \"xoxo\": 3,\n  \"xoxoxo\": 4,\n  \"xoxoxoxo\": 4,\n  \"yeah\": 1,\n  \"yearning\": 1,\n  \"yeees\": 2,\n  \"yes\": 1,\n  \"youthful\": 2,\n  \"yucky\": -2,\n  \"yummy\": 3,\n  \"zealot\": -2,\n  \"zealots\": -2,\n  \"zealous\": 2\n}\n", "{\n    \"cant\": 1,\n    \"can't\": 1,\n    \"dont\": 1,\n    \"don't\": 1,\n    \"doesnt\": 1,\n    \"doesn't\": 1,\n    \"not\": 1,\n    \"non\": 1,\n    \"wont\": 1,\n    \"won't\": 1,\n    \"isnt\": 1,\n    \"isn't\": 1\n}\n", "var negators = require('./negators.json');\n\nmodule.exports = {\n    apply: function(tokens, cursor, tokenScore) {\n        if (cursor > 0) {\n            var prevtoken = tokens[cursor - 1];\n            if (negators[prevtoken]) {\n                tokenScore = -tokenScore;\n            }\n        }\n        return tokenScore;\n    }\n};\n", "module.exports = {\n    labels: require('./labels.json'),\n    scoringStrategy: require('./scoring-strategy')\n};\n", "var emojis = require('../build/emoji.json');\n\n// English is loaded by default\nvar enLanguage = require('../languages/en/index');\n// Add emojis\nObject.assign(enLanguage.labels, emojis);\n\n// Cache loaded languages\nvar languages = {\n    en: enLanguage\n};\n\nmodule.exports = {\n\n    /**\n     * Registers the specified language\n     *\n     * @param {String} languageCode\n     *     - Two-digit code for the language to register\n     * @param {Object} language\n     *     - The language module to register\n     */\n    addLanguage: function (languageCode, language) {\n        if (!language.labels) {\n            throw new Error('language.labels must be defined!');\n        }\n        // Add emojis\n        Object.assign(language.labels, emojis);\n        languages[languageCode] = language;\n    },\n\n    /**\n     * Retrieves a language object from the cache,\n     * or tries to load it from the set of supported languages\n     *\n     * @param {String} languageCode - Two-digit code for the language to fetch\n     */\n    getLanguage: function(languageCode) {\n        if (!languageCode) {\n            // Default to english if no language was specified\n            return languages.en;\n        }\n        if (!languages[languageCode]) {\n            // Try to load specified language\n            try {\n                // eslint-disable-next-line max-len\n                var language = require('../languages/' + languageCode + '/index');\n                // Add language to in-memory cache\n                this.addLanguage(languageCode, language);\n            } catch (err) {\n                throw new Error('No language found: ' + languageCode);\n            }\n        }\n        return languages[languageCode];\n    },\n\n    /**\n     * Returns AFINN-165 weighted labels for the specified language\n     *\n     * @param {String} languageCode - Two-digit language code\n     * @return {Object}\n     */\n    getLabels: function(languageCode) {\n        var language = this.getLanguage(languageCode);\n        return language.labels;\n    },\n\n    /**\n     * Applies a scoring strategy for the current token\n     *\n     * @param {String} languageCode - Two-digit language code\n     * @param {Array} tokens - Tokens of the phrase to analyze\n     * @param {int} cursor - Cursor of the current token being analyzed\n     * @param {int} tokenScore - The score of the current token being analyzed\n     */\n    applyScoringStrategy: function(languageCode, tokens, cursor, tokenScore) {\n        var language = this.getLanguage(languageCode);\n        // Fallback to default strategy if none was specified\n        // eslint-disable-next-line max-len\n        var scoringStrategy = language.scoringStrategy || defaultScoringStrategy;\n        return scoringStrategy.apply(tokens, cursor, tokenScore);\n    }\n};\n\nvar defaultScoringStrategy = {\n    apply: function(tokens, cursor, tokenScore) {\n        return tokenScore;\n    }\n};\n", "var tokenize = require('./tokenize');\nvar languageProcessor = require('./language-processor');\n\n/**\n * Constructor\n * @param {Object} options - Instance options\n */\nvar Sentiment = function (options) {\n    this.options = options;\n};\n\n/**\n * Registers the specified language\n *\n * @param {String} languageCode\n *     - Two-digit code for the language to register\n * @param {Object} language\n *     - The language module to register\n */\nSentiment.prototype.registerLanguage = function (languageCode, language) {\n    languageProcessor.addLanguage(languageCode, language);\n};\n\n/**\n * Performs sentiment analysis on the provided input 'phrase'.\n *\n * @param {String} phrase\n *     - Input phrase\n * @param {Object} opts\n *     - Options\n * @param {Object} opts.language\n *     - Input language code (2 digit code), defaults to 'en'\n * @param {Object} opts.extras\n *     - Optional sentiment additions to AFINN (hash k/v pairs)\n * @param {function} callback\n *     - Optional callback\n * @return {Object}\n */\nSentiment.prototype.analyze = function (phrase, opts, callback) {\n    // Parse arguments\n    if (typeof phrase === 'undefined') phrase = '';\n    if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n    }\n    opts = opts || {};\n\n    var languageCode = opts.language || 'en';\n    var labels = languageProcessor.getLabels(languageCode);\n\n    // Merge extra labels\n    if (typeof opts.extras === 'object') {\n        labels = Object.assign(labels, opts.extras);\n    }\n\n    // Storage objects\n    var tokens      = tokenize(phrase),\n        score       = 0,\n        words       = [],\n        positive    = [],\n        negative    = [],\n        calculation = [];\n\n    // Iterate over tokens\n    var i = tokens.length;\n    while (i--) {\n        var obj = tokens[i];\n        if (!labels.hasOwnProperty(obj)) continue;\n        words.push(obj);\n\n        // Apply scoring strategy\n        var tokenScore = labels[obj];\n        // eslint-disable-next-line max-len\n        tokenScore = languageProcessor.applyScoringStrategy(languageCode, tokens, i, tokenScore);\n        if (tokenScore > 0) positive.push(obj);\n        if (tokenScore < 0) negative.push(obj);\n        score += tokenScore;\n        \n        var zipObj = {}; \n        // Calculations breakdown\n        zipObj[obj] = tokenScore;\n        calculation.push(zipObj);\n    }\n\n    var result = {\n        score:          score,\n        comparative:    tokens.length > 0 ? score / tokens.length : 0,\n        calculation:    calculation,\n        tokens:         tokens,\n        words:          words,\n        positive:       positive,\n        negative:       negative\n    };\n\n    // Handle optional async interface\n    if (typeof callback === 'function') {\n        process.nextTick(function () {\n            callback(null, result);\n        });\n    } else {\n        return result;\n    }\n};\n\nmodule.exports = Sentiment;\n", "// chatai.js\r\nconst { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold} = require('@google/generative-ai');\r\nconst Sentiment = require('sentiment');\r\n\r\nconst genAI = new GoogleGenerativeAI(\"AIzaSyB2JPYGICXfdp3uKJ3xve0Wp-zJh2cdulM\");\r\nconst safety_settings = [\r\n    {\r\n    category: HarmCategory.HARM_CATEGORY_HARASSMENT,\r\n    threshold: HarmBlockThreshold.BLOCK_NONE,\r\n    },\r\n    {\r\n    category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\r\n    threshold: HarmBlockThreshold.BLOCK_NONE,\r\n    },\r\n    {\r\n    category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\r\n    threshold: HarmBlockThreshold.BLOCK_NONE,\r\n    },\r\n    {\r\n    category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\r\n    threshold: HarmBlockThreshold.BLOCK_NONE,\r\n    },\r\n    ];\r\n\r\n\r\nclass ChatAI {\r\n    constructor(options) {\r\n        let defaults = {\r\n            api_key: '',\r\n            source: 'Google',\r\n            model: 'gemini-1.5-flash',\r\n            conversations: [],\r\n            selected_conversation: null,\r\n            container: '.chat-ai',\r\n            chat_speed: 30,\r\n            title: 'HappyPrism',\r\n            max_tokens: 1000,\r\n            version: '1.0.0',\r\n            show_tokens: true,\r\n            available_models: ['gemini-1.5-flash'],\r\n            safety_settings: safety_settings,\r\n        };\r\n        this.agentNames= [\"Spectrum\", \"Sol\", \"Amber\", \"Red\", \"Violet\", \"Jean\", \"Ivy\"]\r\n        this.options = Object.assign(defaults, options);\r\n        this.options.container = document.querySelector(this.options.container);\r\n        this.options.container.innerHTML = \r\n        /*HTML*/\r\n        `\r\n            <main class=\"content\">\r\n                ${this._welcomePageTemplate()}\r\n                <div class=\"response-buttons\"></div>\r\n                <form class=\"message-form\">\r\n                    <input type=\"text\" placeholder=\"Send a message to Spectrum...\" required>\r\n                    <button type=\"submit\"><i class=\"fa-solid fa-paper-plane\"></i></button>\r\n                </form>\r\n            </main>\r\n        `;\r\n        /**/\r\n        let settings = this.getSettings();\r\n        if (settings) {\r\n            this.options = Object.assign(this.options, settings);\r\n        }\r\n        this._eventHandlers();\r\n        this.container.querySelector('.message-form input').focus();\r\n    }\r\n\r\n\r\n    createResponseButtons() {\r\n        const responseContainer = this.container.querySelector('.response-buttons');\r\n        responseContainer.innerHTML = '';\r\n        const conversation = this.selectedConversation\r\n        const interaction = conversation.interactions[conversation.interactions.length-1]\r\n        const buttons = interaction.responseOptions;\r\n\r\n        buttons.forEach(buttonText => {\r\n            const button = document.createElement('button');\r\n            button.textContent = buttonText;\r\n            button.onclick = () => this.handleResponseButtonClick(buttonText);\r\n            responseContainer.appendChild(button);\r\n        });\r\n\r\n        // Ensure buttons are visible by scrolling into view if needed\r\n        responseContainer.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    }\r\n\r\n    clearResponseButtons() {\r\n        const responseContainer = this.container.querySelector('.response-buttons');\r\n        responseContainer.innerHTML = '';\r\n    }\r\n    \r\n\r\n    handleResponseButtonClick(response) {\r\n        const input = this.container.querySelector('.message-form input');\r\n        input.value = response;\r\n        this.container.querySelector('.message-form').dispatchEvent(new Event('submit'));\r\n    }\r\n\r\n    // generateResponseOptions(botMessage) {\r\n    //     // Logic to generate response options based on the bot's message content\r\n    //     // This is a simple example, you can enhance it based on your specific needs\r\n    //     if (botMessage.includes('')) {\r\n    //         return [\"Tell me more about goals\", \"How can I set a goal?\", \"Give me an example of a goal\"];\r\n    //     } else if (botMessage.includes('wellness')) {\r\n    //         return [\"What are the dimensions of wellness?\", \"How can I improve my wellness?\", \"Tell me more about wellness\"];\r\n    //     } else {\r\n    //         return null;\r\n    //     }\r\n    // }\r\n\r\n\r\n    async getMessage() {\r\n        this.container.querySelector('.content .messages').scrollTop = this.container.querySelector('.content .messages').scrollHeight;\r\n        const conversation = this.selectedConversation;\r\n        const interaction = conversation.interactions[conversation.interactions.length-1]\r\n       \r\n        let msg = \"Hello.\"\r\n        if(interaction.messages.length > 0) { msg = interaction.messages[interaction.messages.length - 1].content;}\r\n        this.clearResponseButtons()\r\n        const history = [\r\n            ...interaction.messages.map(message => ({\r\n            role: message.role, \r\n            parts: [{ text: message.content}],\r\n            }))\r\n        ]\r\n        const model = genAI.getGenerativeModel({\r\n            model: \"gemini-1.5-flash-latest\",\r\n            apiVersion: \"v1beta\",\r\n            systemInstruction: conversation.systemInstruction\r\n        });\r\n        const chat = model.startChat({\r\n            history: history,\r\n            generationConfig: {\r\n              maxOutputTokens: this.maxTokens,\r\n            },\r\n            safetySettings: this.safety_settings,\r\n        });\r\n        let retryCount = 0;\r\n        let success = false;\r\n    \r\n        while (retryCount < 3 && !success) {\r\n            try {\r\n                const result = await chat.sendMessageStream(msg);\r\n                success = true;\r\n    \r\n                this.container.querySelector('.message.assistant.active .blink').remove();\r\n                let msgElement = this.container.querySelector('.message.assistant.active .text');\r\n                let text = \"\";\r\n                let totalText = \"\";\r\n                let responsesStarted = false;\r\n    \r\n                for await (const chunk of result.stream) {\r\n                    const chunkText = chunk.text();\r\n                    totalText += chunkText;\r\n                    \r\n                    if (chunkText.includes(\"\u00A7\") && !responsesStarted) {\r\n                        const parts = chunkText.split(\"\u00A7\");\r\n    \r\n                        msgElement.innerHTML += parts[0].replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\r\n                        text += parts[1];\r\n                        responsesStarted = true;\r\n                    }\r\n    \r\n                    if (!responsesStarted) {\r\n                        msgElement.innerHTML += chunkText.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\r\n                    }\r\n                }\r\n    \r\n                if(totalText.includes(\"\u00A7\")) {\r\n                    let responseText = totalText.slice(totalText.indexOf(\"\u00A7\") + 1);\r\n                    const responseLines = responseText.split('\\n');\r\n                    responseLines.shift();\r\n                    const responseOptions = [];\r\n                    const responseItemRegex = /^\\d+-\\s*(.*)$/;\r\n    \r\n                    for (const responseLine of responseLines) {\r\n                        const responseMatch = responseLine.match(responseItemRegex);\r\n                        if (responseMatch) {\r\n                            const newOption = responseMatch[1].trim();\r\n                            const forbiddenSubstrings = [\"(\", \")\", \"...\", \"[\", \"]\", \"{\", \"}\"];\r\n                            if (!forbiddenSubstrings.some(substring => newOption.includes(substring))) {\r\n                                responseOptions.push(newOption);\r\n                            }\r\n                        }\r\n                    }\r\n                    interaction.responseOptions = responseOptions;\r\n                }\r\n    \r\n                this.container.querySelector('.message-form input').disabled = false;\r\n                this.container.querySelector('.message-form input').placeholder = `Send a message to ${this.selectedConversation.name}...`;\r\n                const assisstantMessage = this.container.querySelector('.message.assistant.active');\r\n                if (assisstantMessage) {\r\n                    assisstantMessage.classList.remove('active');\r\n                }\r\n    \r\n                interaction.messages.push({\r\n                    role: 'model',\r\n                    content: totalText,\r\n                    date: new Date(),\r\n                    total_tokens: 0,\r\n                    prompt_tokens: 0,\r\n                    completion_tokens: 0\r\n                });\r\n    \r\n                this.createResponseButtons();\r\n                this.container.querySelector('.content .messages').scrollTop = this.container.querySelector('.content .messages').scrollHeight;\r\n                //FUNCTION TRIGGERS\r\n                if(totalText.includes(\"onnecting you to \" + this.agentNames[0])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[1])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[2])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[3])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[4])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[5])\r\n                    || totalText.includes(\"onnecting you to \" + this.agentNames[6])\r\n                ){\r\n\r\n\r\n                    //The following code extracts the word immediately after the trigger phrase, then makes sure it is one of the accepted values before calling the function\r\n                    const triggerPhrase = \"onnecting you to \"\r\n                    const startIndex = totalText.indexOf(\"onnecting you to \");\r\n                    if (startIndex !== -1) {\r\n                        // Calculate the start position of the word after the trigger phrase\r\n                        const wordStartIndex = startIndex + triggerPhrase.length;\r\n                        // Get the substring from the word start index to the end of the message\r\n                        const remainingMessage = totalText.substring(wordStartIndex).trim();\r\n                        // Split the remaining message to get the first word\r\n                        const words = remainingMessage.split(\" \");\r\n                        // Return the first word\r\n                        const agentName = words[0];\r\n                    \r\n                        console.log(\"openAgentChat triggered\");\r\n                        setTimeout(async () => {  \r\n                            interaction.messages.push({\r\n                                role: 'system',\r\n                                content: `openChat triggered, opening chat with ${agentName}`,\r\n                                date: new Date(),\r\n                                total_tokens: 0,\r\n                                prompt_tokens: 0,\r\n                                completion_tokens: 0\r\n                            });\r\n                            // Update context\r\n                            this.selectedConversation.contextSummary = await this.getContextSummary(this.selectedConversation);\r\n                        \r\n                            // Update system instruction\r\n                            this.selectedConversation.systemInstruction = await this.getSystemInstruction(this.selectedConversation.name, \"FollowUp\", this.selectedConversation.contextSummary);\r\n                        \r\n                            // Create a new interaction for our current conversation so the user starts with that interaction next time they come back to this conversation\r\n                            this.selectedConversation.interactions.push(await this.createNewInteraction());\r\n                        \r\n                            // Create desiredConversation variable, assign it to selectedConversation for type consistency\r\n                            let desiredConversation = this.selectedConversation;\r\n                        \r\n                            // Immediately reassign to a conversation with the triggered agent name\r\n                            if (desiredConversation = this.conversations.find(conversation => conversation.name === agentName)) {\r\n                                this.loadConversation(desiredConversation);\r\n                            }\r\n                            // If we couldn't find a conversation with the triggered agent name, create one\r\n                            else {\r\n                                await this.createNewConversation(agentName);\r\n                                this.loadConversation(this.conversations.find(conversation => conversation.name === agentName));\r\n                            }\r\n                        }, 1000);\r\n                    }\r\n                }\r\n                if(totalText.includes(\"et's look at your goal: \")){\r\n                    console.log(\"openGoalTracker triggered\");\r\n                    //The following code extracts the word immediately after the trigger phrase, then makes sure it is one of the accepted values before calling the function\r\n                    const triggerPhrase = \"et's look at your goal: \"\r\n                    const startIndex = totalText.indexOf(\"et's look at your goal: \");\r\n                    if (startIndex !== -1) {\r\n                        // Calculate the start position of the word after the trigger phrase\r\n                        const goalNameStartIndex = startIndex + triggerPhrase.length;\r\n                        // Get the substring from the word start index to the end of the message\r\n                        if (totalText[goalNameStartIndex] !== '\"') {\r\n                            console.log(\"No opening quotation mark found.\");\r\n                        }\r\n                        let goalNameEndIndex = totalText.indexOf('\"', goalNameStartIndex + 1);\r\n                    \r\n                        if (goalNameEndIndex === -1) {\r\n                            return \"No closing quotation mark found.\";\r\n                        }\r\n                    \r\n                        console.log(\"Goal name: \",totalText.slice(goalNameStartIndex + 1, goalNameEndIndex));\r\n                    \r\n                        \r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.container.querySelector('.content .messages').innerHTML = '';\r\n                this.container.querySelector('.response-buttons').innerHTML = '';\r\n                this.container.querySelector('.message-form input').disabled = false;\r\n                this.container.querySelector('.message-form input').placeholder = `Send a message to ${this.selectedConversation.name}...`;\r\n                this.showErrorMessage(\"There has been an error, please try sending a different message.\");\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    async getJsonFile() {\r\n        try {\r\n            let [fileHandle] = await window.showOpenFilePicker();\r\n            let file = await fileHandle.getFile();\r\n            let fileContents = await file.text();\r\n            let jsonObject = JSON.parse(fileContents);\r\n            return { content: jsonObject, name: file.name };\r\n        } catch (error) {\r\n            if (error.code !== DOMException.ABORT_ERR) {\r\n                console.error('Error reading JSON file:', error);\r\n                this.showErrorMessage(error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveJsonToFile(jsonObject) {\r\n        try {\r\n            let options = {\r\n                suggestedName: 'ai-conversations.json',\r\n                types: [{\r\n                    description: 'JSON Files',\r\n                    accept: { 'application/json': ['.json'] }\r\n                }]\r\n            };\r\n            let handle = await window.showSaveFilePicker(options);\r\n            let writable = await handle.createWritable();\r\n            let jsonString = JSON.stringify(jsonObject, null, 2);\r\n            await writable.write(jsonString);\r\n            await writable.close();\r\n            this.options.title = handle.name;\r\n            this.updateTitle(false);\r\n            this.showSuccessMessage('File saved successfully.');\r\n        } catch (error) {\r\n            if (error.code !== DOMException.ABORT_ERR) {\r\n                console.error('Error saving JSON file:', error);\r\n                this.showErrorMessage(error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    showErrorMessage(message) {\r\n        this.container.querySelectorAll('.error').forEach(error => error.remove());\r\n        let error = document.createElement('div');\r\n        error.classList.add('error-toast');\r\n        error.innerHTML = message;\r\n        this.container.appendChild(error);\r\n        error.getBoundingClientRect();\r\n        error.style.transition = 'opacity .5s ease-in-out 4s';\r\n        error.style.opacity = 0;\r\n        setTimeout(() => error.remove(), 5000);\r\n    }\r\n\r\n    showSuccessMessage(message) {\r\n        this.container.querySelectorAll('.success').forEach(success => success.remove());\r\n        let success = document.createElement('div');\r\n        success.classList.add('success-toast');\r\n        success.innerHTML = message;\r\n        this.container.appendChild(success);\r\n        success.getBoundingClientRect();\r\n        success.style.transition = 'opacity .5s ease-in-out 4s';\r\n        success.style.opacity = 0;\r\n        setTimeout(() => success.remove(), 5000);\r\n    }\r\n\r\n    formatElapsedTime(dateString) {\r\n        let date = new Date(dateString);\r\n        let now = new Date();\r\n        let elapsed = now - date;\r\n        let seconds = Math.floor(elapsed / 1000);\r\n        let minutes = Math.floor(seconds / 60);\r\n        let hours = Math.floor(minutes / 60);\r\n        let days = Math.floor(hours / 24);\r\n        if (days > 1) {\r\n            return `${days} days ago`;\r\n        } else if (days === 1) {\r\n            return 'Yesterday';\r\n        } else if (hours > 0) {\r\n            return `${hours} hours ago`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes} minutes ago`;\r\n        } else {\r\n            return `${seconds} seconds ago`;\r\n        }\r\n    }\r\n\r\n    loadConversation(conversation) {\r\n        this.clearWelcomeScreen();\r\n        this.clearMessages();\r\n        this.clearResponseButtons();\r\n        this.container.querySelector('.content .messages').insertAdjacentHTML('afterbegin', `\r\n            <div class=\"conversation-title\">\r\n                <h2><span class=\"text\">${conversation.name}</span><i class=\"fa-solid fa-pencil edit\"></i><i class=\"fa-solid fa-trash delete\"></i></h2>\r\n            </div>\r\n        `);\r\n        this._conversationTitleClickHandler();\r\n        this.createResponseButtons();\r\n        this.container.querySelector('.message-form input').placeholder = `Send a message to ${conversation.name}...`\r\n        \r\n        conversation.interactions.forEach(interaction => {\r\n            interaction.messages.forEach(message => {\r\n                if(message.role != \"system\"){\r\n                //Remove any suggested responses\r\n                let content = message.content.split('\u00A7')[0];\r\n                \r\n                this.container.querySelector('.content .messages').insertAdjacentHTML('afterbegin', \r\n                    /*HTML*/`\r\n                    <div class=\"message ${message.role == 'model' ? 'assistant' : 'user'}\">\r\n                        <div class=\"wrapper\">\r\n                            <div class=\"avatar\">${message.role == 'model' ? 'AI' : '<i class=\"fa-solid fa-user\"></i>'}</div>\r\n                            <div class=\"details\">\r\n                                <div class=\"date\" title=\"${message.date}\">${this.formatElapsedTime(message.date)}</div>\r\n                                <div class=\"text\">\r\n                                    ${content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>').replace(/```(.*?)```/, \"<pre><code>$1\" + \"<\" + \"/code>\" + \"<\" + \"/pre>\")}\r\n                                    ${this.options.show_tokens && message.total_tokens ? '<div><span class=\"tokens\">' + message.total_tokens + ' Tokens</span></div>' : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    clearWelcomeScreen() {\r\n        if (this.container.querySelector('.content .welcome')) {\r\n            this.container.querySelector('.content .welcome').remove();\r\n            this.container.querySelector('.content').insertAdjacentHTML('afterbegin', '<div class=\"messages\"></div>');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearMessages() {\r\n        if (this.container.querySelector('.content .messages')) {\r\n            this.container.querySelector('.content .messages').innerHTML = '';\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async createNewConversation(agentName = null) {\r\n        agentName = agentName != null ? agentName : 'Spectrum';\r\n        let interactionsArray = []\r\n\r\n        let contextSummary = \"\";\r\n        let promptName = \"Initial\";\r\n        \r\n        const conversation = this.conversations.find(previousConversation => previousConversation.name === agentName);\r\n        if(conversation){\r\n            contextSummary = await this.getContextSummary(conversation);\r\n            promptName = \"FollowUp\";\r\n        }\r\n        let systemInstruction = await this.getSystemInstruction(agentName, promptName, contextSummary);\r\n        interactionsArray.push(await this.createNewInteraction(agentName));\r\n        let index = this.conversations.push({ name: agentName, interactions: interactionsArray, systemInstruction: systemInstruction, contextSummary: contextSummary});\r\n        console.log(this.conversations);\r\n        // this.container.querySelectorAll('.conversations .list a').forEach(c => c.classList.remove('selected'));\r\n        // this.container.querySelector('.conversations .list').insertAdjacentHTML('beforeend', `<a class=\"conversation selected\" href=\"#\" data-id=\"${index - 1}\" title=\"${agentName}\"><i class=\"fa-regular fa-message\"></i>${agentName}</a>`);\r\n        this.clearWelcomeScreen();\r\n        this.clearMessages();\r\n        this._conversationClickHandlers();\r\n        this.container.querySelector('.content .messages').innerHTML = '<div class=\"conversation-title\"><h2><span class=\"text\">' + agentName + '</span><i class=\"fa-solid fa-pencil edit\"></i><i class=\"fa-solid fa-trash delete\"></i></h2></div>';\r\n        this._conversationTitleClickHandler();\r\n        this.container.querySelector('.message-form input').focus();\r\n        this.container.querySelector('.message-form input').placeholder = `Send a message to ${agentName}...`\r\n        this.updateTitle();\r\n        return index - 1;\r\n    }\r\n\r\n    async getSystemInstruction(agentName, promptName, contextSummary) {\r\n            let promptsPath = `./Prompts/${agentName}/`;\r\n            const response = await fetch(promptsPath + promptName + \".txt\");\r\n            const text = await response.text();\r\n            if(contextSummary.length > 0){\r\n                return text + \"\\n\\n\" + contextSummary;\r\n            }\r\n            return text;\r\n    }\r\n\r\n    async createNewInteraction(agentName = null) {\r\n        //Set default values for first time running the program\r\n        agentName = agentName != null ? agentName : 'Spectrum';\r\n        let currentInteraction = null;\r\n        let conversation = null;\r\n        let promptName = \"Initial\";\r\n\r\n        conversation = this.conversations.find(previousConversation => previousConversation.name === agentName);\r\n        if(conversation){\r\n            const currentInteractionIndex = conversation.interactions.length - 1;\r\n            currentInteraction = conversation.interactions[currentInteractionIndex];\r\n            promptName = \"FollowUp\";\r\n        }\r\n\r\n        const newInteraction = { messages: [], responseOptions: []};\r\n\r\n        console.log(`New ${promptName} interaction with ${agentName} created.`);\r\n        return newInteraction;\r\n    }\r\n\r\n    async getContextSummary(conversation) {\r\n        const getPrompt = await fetch(`./Prompts/Summarizer/prompt.txt`);\r\n        const summarizerInstructions = await getPrompt.text();\r\n        const summarizerModel = genAI.getGenerativeModel({\r\n            model: \"gemini-1.5-flash-latest\",\r\n            apiVersion: \"v1beta\",\r\n            systemInstruction: summarizerInstructions\r\n        });\r\n       let previousContext = `*PREVIOUS CONTEXT BETWEEN USER AND ${conversation.name}*\\n\\n`;\r\n       previousContext += conversation.contextSummary;\r\n\r\n        const currentInteraction = conversation.interactions[conversation.interactions.length - 1];\r\n        const messages = currentInteraction.messages;\r\n    \r\n        // Create the transcript\r\n        let transcript = `*TRANSCRIPT BETWEEN USER AND ${conversation.name}*\\n\\n`;\r\n        messages.forEach(message => {\r\n            const role = message.role === 'user' ? 'USER' : 'ASSISTANT';\r\n            transcript += `${role}: ${message.content}\\n\\n`;\r\n        });\r\n    \r\n        // Create history with the single transcript message\r\n        const history = [\r\n            {\r\n                role: 'user',\r\n                parts: [{ text: previousContext }],\r\n            },\r\n            {\r\n                role: 'user',\r\n                parts: [{ text: transcript }],\r\n            }\r\n        ];\r\n    \r\n        const chat = summarizerModel.startChat({\r\n            history: history,\r\n            generationConfig: {\r\n                maxOutputTokens: this.maxTokens,\r\n            },\r\n            safetySettings: this.safety_settings,\r\n        });\r\n    \r\n        const msg = \"Create a summary of this conversation so far.\";\r\n        const result = await chat.sendMessage(msg);\r\n        const response = await result.response;\r\n        const text = response.text();\r\n        console.log(\"Context Summary: \", text);\r\n        return text;\r\n    }\r\n    \r\n\r\n\r\n    updateTitle(unsaved = true) {\r\n        document.title = unsaved ? '* ' + this.options.title.replace('* ', '') : this.options.title.replace('* ', '');\r\n    }\r\n\r\n    modal(options) {\r\n        let element;\r\n        if (document.querySelector(options.element)) {\r\n            element = document.querySelector(options.element);\r\n        } else if (options.modalTemplate) {\r\n            document.body.insertAdjacentHTML('beforeend', options.modalTemplate());\r\n            element = document.body.lastElementChild;\r\n        }\r\n        options.element = element;\r\n        options.open = obj => {\r\n            element.style.display = 'flex';\r\n            element.getBoundingClientRect();\r\n            element.classList.add('open');\r\n            if (options.onOpen) options.onOpen(obj);\r\n        };\r\n        options.close = obj => {\r\n            if (options.onClose) {\r\n                let returnCloseValue = options.onClose(obj);\r\n                if (returnCloseValue !== false) {\r\n                    element.style.display = 'none';\r\n                    element.classList.remove('open');\r\n                    element.remove();\r\n                }\r\n            } else {\r\n                element.style.display = 'none';\r\n                element.classList.remove('open');\r\n                element.remove();\r\n            }\r\n        };\r\n        if (options.state == 'close') {\r\n            options.close({ source: element, button: null });\r\n        } else if (options.state == 'open') {\r\n            options.open({ source: element }); \r\n        }\r\n        element.querySelectorAll('.modal-close').forEach(e => {\r\n            e.onclick = event => {\r\n                event.preventDefault();\r\n                options.close({ source: element, button: e });\r\n            };\r\n        });\r\n        return options;\r\n    }\r\n\r\n    openSettingsModal() {\r\n        let self = this;\r\n        return this.modal({\r\n            state: 'open',\r\n            modalTemplate: function () {\r\n                /*HTML*/\r\n                return `\r\n                <div class=\"chat-ai-modal\">\r\n                    <div class=\"content\">\r\n                        <h3 class=\"heading\">Settings<span class=\"modal-close\">&times;</span></h3>\r\n                        <div class=\"body\">\r\n                            <form class=\"settings-form\" action=\"\">\r\n                                <label for=\"api_key\">API Key</label>\r\n                                <input type=\"text\" name=\"api_key\" id=\"api_key\" value=\"${self.APIKey}\">\r\n                                <label for=\"source\">Source</label>\r\n                                <select name=\"source\" id=\"source\">\r\n                                    <option value=\"openai\" selected>OpenAI</option>\r\n                                </select>\r\n                                <label for=\"model\">Model</label>\r\n                                <select name=\"model\" id=\"model\">\r\n                                    ${self.options.available_models.map(m => `<option value=\"${m}\"${self.model==m?' selected':''}>${m}</option>`).join('')}\r\n                                </select>\r\n                                <label for=\"max_tokens\">Max Tokens</label>\r\n                                <input type=\"number\" name=\"max_tokens\" id=\"max_tokens\" value=\"${self.maxTokens}\">\r\n                                <div class=\"msg\"></div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"footer\">\r\n                            <a href=\"#\" class=\"btn modal-close save\">Save</a>\r\n                            <a href=\"#\" class=\"btn modal-close reset right alt\">Reset</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                `;\r\n            },\r\n            onClose: function (event) {\r\n                if (event && event.button) {\r\n                    if (event.button.classList.contains('save')) {\r\n                        self.APIKey = event.source.querySelector('#api_key').value;\r\n                        self.maxTokens = event.source.querySelector('#max_tokens').value;\r\n                        self.source = event.source.querySelector('#source').value;\r\n                        self.model = event.source.querySelector('#model').value;\r\n                        self.saveSettings();\r\n                    }\r\n                    if (event.button.classList.contains('reset')) {\r\n                        localStorage.removeItem('settings');\r\n                        location.reload();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getSettings() {\r\n        return localStorage.getItem('settings') ? JSON.parse(localStorage.getItem('settings')) : false;\r\n    }\r\n\r\n    saveSettings() {\r\n        localStorage.setItem('settings', JSON.stringify({ api_key: this.APIKey, max_tokens: this.maxTokens, source: this.source, model: this.model }));\r\n    }\r\n\r\n    _welcomePageTemplate() {\r\n        /*HTML*/\r\n        return `\r\n            <div class=\"welcome\">\r\n                <h1>HappyPrism Chat<span class=\"ver\">beta</span></h1>                    \r\n                <p>Type your first message below to get started!</p>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    _sidebarTemplate() {\r\n        /*HTML*/\r\n        return `\r\n            <a href=\"#\" class=\"open-sidebar\" title=\"Open Sidebar\"><i class=\"fa-solid fa-bars\"></i></a>\r\n            <nav class=\"conversations\">\r\n                <a class=\"new-conversation\" href=\"#\"><i class=\"fa-solid fa-plus\"></i>New Conversation</a>\r\n                <div class=\"list\"></div>\r\n                <div class=\"footer\">\r\n                    <a class=\"save\" href=\"#\" title=\"Save\"><i class=\"fa-solid fa-floppy-disk\"></i></a>\r\n                    <a class=\"open-database\" href=\"#\"><i class=\"fa-regular fa-folder-open\"></i></a>\r\n                    <a class=\"settings\" href=\"#\"><i class=\"fa-solid fa-cog\"></i></a>\r\n                    <a class=\"close-sidebar\" href=\"#\" title=\"Close Sidebar\"><i class=\"fa-solid fa-bars\"></i></a>\r\n                </div>\r\n            </nav>\r\n        `;\r\n    }\r\n\r\n    _conversationClickHandlers() {\r\n        this.container.querySelectorAll('.conversations .list a').forEach(conversation => {\r\n            conversation.onclick = event => {\r\n                event.preventDefault();\r\n                this.container.querySelectorAll('.conversations .list a').forEach(c => c.classList.remove('selected'));\r\n                conversation.classList.add('selected');\r\n                this.selectedConversationIndex = conversation.dataset.id;\r\n                this.selectedConversation = this.conversations[this.selectedConversationIndex];\r\n                this.loadConversation(this.selectedConversation);\r\n                this.container.querySelector('.content .messages').scrollTop = this.container.querySelector('.content .messages').scrollHeight;\r\n            };\r\n        });\r\n    }\r\n\r\n    _conversationTitleClickHandler() {\r\n        this.container.querySelector('.conversation-title i.edit').onclick = () => {\r\n            this.container.querySelector('.conversation-title .text').contentEditable = true;\r\n            this.container.querySelector('.conversation-title .text').focus();\r\n            let update = () => {\r\n                this.container.querySelector('.conversation-title .text').contentEditable = false;\r\n                this.selectedConversation.name = this.container.querySelector('.conversation-title .text').innerText;\r\n                this.container.querySelector('.conversation-title .text').blur();\r\n                this.container.querySelector('.conversations .list a[data-id=\"' + this.selectedConversationIndex + '\"]').innerHTML = '<i class=\"fa-regular fa-message\"></i>' + this.selectedConversation.name;\r\n                this.container.querySelector('.conversations .list a[data-id=\"' + this.selectedConversationIndex + '\"]').title = this.selectedConversation.name;\r\n                this.updateTitle();\r\n            };\r\n            this.container.querySelector('.conversation-title .text').onblur = () => update();\r\n            this.container.querySelector('.conversation-title .text').onkeydown = event => {\r\n                if (event.keyCode == 13) {\r\n                    event.preventDefault();\r\n                    update();\r\n                }\r\n            };\r\n        };\r\n        this.container.querySelector('.conversation-title i.delete').onclick = () => {\r\n            if (confirm('Are you sure you want to delete this conversation?')) {\r\n                this.conversations.splice(this.selectedConversationIndex, 1);\r\n                this.selectedConversation = [];\r\n                this.selectedConversationIndex = null;\r\n                this.container.querySelector('.content').innerHTML = '';\r\n                this.container.querySelector('.conversations .list .conversation.selected').remove();\r\n                this.updateTitle();\r\n                if (!this.container.querySelector('.content .welcome')) {\r\n                    this.container.querySelector('.content').insertAdjacentHTML('afterbegin', this._welcomePageTemplate());\r\n                }\r\n                this._openDatabaseEventHandlers();\r\n            }\r\n        };\r\n    }\r\n\r\n    _openDatabaseEventHandlers() {\r\n        this.container.querySelectorAll('.open-database').forEach(button => {\r\n            button.onclick = event => {\r\n                event.preventDefault();\r\n                if (document.title.startsWith('*') && !confirm('You have unsaved changes. Continue without saving?')) {\r\n                    return;\r\n                }\r\n                this.getJsonFile().then(json => {\r\n                    if (json !== undefined) {\r\n                        if (this.container.querySelector('.content .messages')) {\r\n                            this.container.querySelector('.content .messages').remove();\r\n                        }\r\n                        if (!this.container.querySelector('.content .welcome')) {\r\n                            this.container.querySelector('.content').insertAdjacentHTML('afterbegin', this._welcomePageTemplate());\r\n                        }\r\n                        this.container.querySelector('.conversations .list').innerHTML = '';\r\n                        this.selectedConversation = [];\r\n                        this.selectedConversationIndex = null;\r\n                        this.conversations = json.content;\r\n                        document.title = json.name;\r\n                        this.options.title = json.name;\r\n                        this.conversations.forEach((conversation, index) => {\r\n                            this.container.querySelector('.conversations .list').insertAdjacentHTML('beforeend', `<a class=\"conversation\" href=\"#\" data-id=\"${index}\" title=\"${conversation.name}\"><i class=\"fa-regular fa-message\"></i>${conversation.name}</a>`);\r\n                        });\r\n                        this._conversationClickHandlers();\r\n                        this._openDatabaseEventHandlers();\r\n                    }\r\n                });\r\n            };\r\n        });\r\n    }\r\n\r\n    async _eventHandlers() {\r\n        this.container.querySelector('.message-form').onsubmit = async event => {\r\n            event.preventDefault();\r\n            this.clearWelcomeScreen();\r\n            if (this.selectedConversation === undefined) {\r\n                this.selectedConversationIndex = await this.createNewConversation();\r\n                this.selectedConversation = this.conversations[this.selectedConversationIndex];\r\n            }\r\n            if (this.selectedConversation) {\r\n                let date = new Date();\r\n                const conversation = this.selectedConversation\r\n                const interaction = conversation.interactions[conversation.interactions.length-1]\r\n                interaction.messages.push({\r\n                    role: 'user',\r\n                    content: this.container.querySelector('.message-form input').value,\r\n                    date: date\r\n                });\r\n                \r\n                \r\n                this.container.querySelector('.messages').insertAdjacentHTML('afterbegin', \r\n                /*HTML*/`\r\n                    <div class=\"message assistant active\">\r\n                        <div class=\"wrapper\">\r\n                            <div class=\"avatar\">AI</div>\r\n                            <div class=\"details\">\r\n                                <div class=\"date\" data-date=\"${date}\" title=\"${date}\">just now</div>\r\n                                <div class=\"text\"><span class=\"blink\">_</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"message user\">\r\n                        <div class=\"wrapper\">\r\n                            <div class=\"avatar\"><i class=\"fa-solid fa-user\"></i></div>\r\n                            <div class=\"details\">\r\n                                <div class=\"date\" data-date=\"${date}\" title=\"${date}\">just now</div>\r\n                                <div class=\"text\">${this.container.querySelector('.message-form input').value}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `);\r\n                this.container.querySelector('.message-form input').disabled = true;\r\n                this.getMessage(this.container.querySelector('.message-form input').value);\r\n                this.container.querySelector('.message-form input').value = '';\r\n                this.updateTitle();\r\n                // window.addEventListener('keydown', event => {\r\n                //     if (event.ctrlKey && event.key === 's') {\r\n                //         event.preventDefault();\r\n                //         this.saveJsonToFile(this.conversations);\r\n                //     }\r\n                // });\r\n                // window.addEventListener('beforeunload', event => {\r\n                //     if (document.title.startsWith('*') && !confirm('You have unsaved changes. Are you sure you want to leave?')) {\r\n                //         event.preventDefault();\r\n                //         event.returnValue = '';\r\n                //     }\r\n                // });\r\n                // this.container.querySelector('.save').onclick = event => {\r\n                //     event.preventDefault();\r\n                //     this.saveJsonToFile(this.conversations);\r\n                // };\r\n                // this.container.querySelector('.conversations .new-conversation').onclick = event => {\r\n                //     event.preventDefault();\r\n                //     this.selectedConversationIndex = this.createNewConversation();\r\n                // };\r\n                // this.container.querySelector('.open-sidebar').onclick = event => {\r\n                //     event.preventDefault();\r\n                //     this.container.querySelector('.conversations').style.display = 'flex';\r\n                //     this.container.querySelector('.open-sidebar').style.display = 'none';\r\n                //     localStorage.setItem('sidebar', 'open');\r\n                // };\r\n                // this.container.querySelector('.close-sidebar').onclick = event => {\r\n                //     event.preventDefault();\r\n                //     this.container.querySelector('.conversations').style.display = 'none';\r\n                //     this.container.querySelector('.open-sidebar').style.display = 'flex';\r\n                //     localStorage.setItem('sidebar', 'closed');\r\n                // };\r\n                // if (localStorage.getItem('sidebar') === 'closed') {\r\n                //     this.container.querySelector('.conversations').style.display = 'none';\r\n                //     this.container.querySelector('.open-sidebar').style.display = 'flex';\r\n                // }\r\n                // this.container.querySelector('.settings').onclick = event => {\r\n                //     event.preventDefault();\r\n                //     this.openSettingsModal();\r\n                // };\r\n                setInterval(() => {\r\n                    this.container.querySelectorAll('[data-date]').forEach(element => {\r\n                        element.innerHTML = this.formatElapsedTime(element.getAttribute('data-date'));\r\n                    });\r\n                }, 120000);\r\n                this._openDatabaseEventHandlers();\r\n                this._conversationClickHandlers();\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    get APIKey() {\r\n        return this.options.api_key;\r\n    }\r\n\r\n    set APIKey(value) {\r\n        this.options.api_key = value;\r\n    }\r\n\r\n    get model() {\r\n        return this.options.model;\r\n    }\r\n\r\n    set model(value) {\r\n        this.options.model = value;\r\n    }\r\n\r\n    get source() {\r\n        return this.options.source;\r\n    }\r\n\r\n    set source(value) {\r\n        this.options.source = value;\r\n    }\r\n\r\n    get conversations() {\r\n        return this.options.conversations;\r\n    }\r\n\r\n    set conversations(value) {\r\n        this.options.conversations = value;\r\n    }\r\n\r\n    get selectedConversationIndex() {\r\n        return this.options.selected_conversation;\r\n    }\r\n\r\n    set selectedConversationIndex(value) {\r\n        this.options.selected_conversation = value;\r\n    }\r\n\r\n    get selectedConversation() {\r\n        return this.conversations[this.selectedConversationIndex];\r\n    }\r\n\r\n    set selectedConversation(value) {\r\n        this.conversations[this.selectedConversationIndex] = value;\r\n    } \r\n    \r\n    get container() {\r\n        return this.options.container;\r\n    }\r\n\r\n    set container(value) {\r\n        this.options.container = value;\r\n    }\r\n\r\n    get maxTokens() {\r\n        return parseInt(this.options.max_tokens);\r\n    }\r\n\r\n    set maxTokens(value) {\r\n        this.options.max_tokens = parseInt(value);\r\n    }\r\n\r\n}\r\nwindow.ChatAI = ChatAI;\r\n\r\nmodule.exports = ChatAI;"],
  "mappings": "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AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,QAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,QAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,aAAM;AAAA,MACN,aAAM;AAAA,MACN,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;AAAA,MACL,UAAK;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",
  "names": ["Task", "_a", "conversation", "error", "success"]
}
